<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary x:Class="TheRThemes.ColourfulDarkTheme" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:therthemes="clr-namespace:TheRThemes;assembly=DayZavr Dayz">
  <SolidColorBrush x:Key="BackgroundColour" Color="#FF232323" />
  <SolidColorBrush x:Key="WindowBorderColour" Color="#FF343434" />
  <SolidColorBrush x:Key="WindowTitleColour" Color="#FF242424" />
  <SolidColorBrush x:Key="TransparentBrush" Color="Transparent" />
  <SolidColorBrush x:Key="ContainerBackground" Color="#FF272727" />
  <SolidColorBrush x:Key="ContainerBorder" Color="#FF2B2B2B" />
  <SolidColorBrush x:Key="ControlDefaultForeground" Color="#FFEBEBEB" />
  <SolidColorBrush x:Key="ControlLForeground" Color="#FFFF2E00" />
  <SolidColorBrush x:Key="ControlDarkerBackground" Color="#FF2A2A2A" />
  <SolidColorBrush x:Key="ControlDarkerBorderBrush" Color="#FF2F2F2F" />
  <SolidColorBrush x:Key="ControlDefaultBackground" Color="#FF2D2D2D" />
  <SolidColorBrush x:Key="ControlDefaultBorderBrush" Color="#FF323232" />
  <SolidColorBrush x:Key="ControlBrightDefaultBackground" Color="#FF343434" />
  <SolidColorBrush x:Key="ControlBrightDefaultBorderBrush" Color="#FF3C3C3C" />
  <SolidColorBrush x:Key="ControlDisabledBackground" Color="#FF424242" />
  <SolidColorBrush x:Key="ControlDisabledBorderBrush" Color="#FF464646" />
  <SolidColorBrush x:Key="ControlMouseOverBackground" Color="#FF3F3F3F" />
  <SolidColorBrush x:Key="ControlMouseOverBorderBrush" Color="#FF414141" />
  <SolidColorBrush x:Key="ControlSelectedBackground" Color="#FF323232" />
  <SolidColorBrush x:Key="ControlSelectedBorderBrush" Color="#FF373737" />
  <SolidColorBrush x:Key="ControlSelectedMouseOverBackground" Color="#FF3F3F3F" />
  <SolidColorBrush x:Key="ControlSelectedMouseOverBorderBrush" Color="#FF424242" />
  <SolidColorBrush x:Key="ControlGlythColour" Color="#FFEBEBEB" />
  <SolidColorBrush x:Key="ControlMouseOverGlythColour" Color="#FFD7D7D7" />
  <SolidColorBrush x:Key="ControlSelectedGlythColour" Color="#FFC8C8C8" />
  <SolidColorBrush x:Key="ControlDisabledGlythColour" Color="#FFA0A0A0" />
  <SolidColorBrush x:Key="ControlPrimaryDarkerBackground" Color="#FF5670f7" />
  <SolidColorBrush x:Key="ControlPrimaryDarkerBorderBrush" Color="#FF3a45e4" />
  <SolidColorBrush x:Key="ControlPrimaryDefaultBackground" Color="#FF5670f7" />
  <SolidColorBrush x:Key="ControlPrimaryDefaultBorderBrush" Color="#FF3a45e4" />
  <SolidColorBrush x:Key="ControlPrimaryBrightDefaultBackground" Color="#FF5670f7" />
  <SolidColorBrush x:Key="ControlPrimaryBrightDefaultBorderBrush" Color="#FF3a45e4" />
  <SolidColorBrush x:Key="ControlPrimaryDisabledBackground" Color="#FF5670f7" />
  <SolidColorBrush x:Key="ControlPrimaryDisabledBorderBrush" Color="#FF3a45e4" />
  <SolidColorBrush x:Key="ControlPrimaryMouseOverBackground" Color="#FF2A2A2A" />
  <SolidColorBrush x:Key="ControlPrimaryMouseOverBorderBrush" Color="#FF1F1F1F" />
  <SolidColorBrush x:Key="ControlPrimarySelectedBackground" Color="#FF5670f7" />
  <SolidColorBrush x:Key="ControlPrimarySelectedBorderBrush" Color="#FF3a45e4" />
  <SolidColorBrush x:Key="ControlPrimarySelectedMouseOverBackground" Color="#FF5670f7" />
  <SolidColorBrush x:Key="ControlPrimarySelectedMouseOverBorderBrush" Color="#FF3a45e4" />
  <SolidColorBrush x:Key="ControlPrimaryCaretSelectionBackground" Color="#FF5670f7" />
  <SolidColorBrush x:Key="ControlPrimaryCaretBackground" Color="#FF5670f7" />
  <SolidColorBrush x:Key="ControlPrimaryGlythColour" Color="#FF3a45e4" />
  <SolidColorBrush x:Key="ControlPrimaryMouseOverGlythColour" Color="#FF3a45e4" />
  <SolidColorBrush x:Key="ControlPrimarySelectedGlythColour" Color="#FF3a45e4" />
  <SolidColorBrush x:Key="ControlPrimarySelectedMouseOverGlythColour" Color="#FF3a45e4" />
  <SolidColorBrush x:Key="ControlPrimaryDisabledGlythColour" Color="#FF3a45e4" />
  <Style x:Key="FocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle StrokeDashArray="1 2" StrokeThickness="1" SnapsToDevicePixels="True" Margin="2" Stroke="{StaticResource ControlPrimaryBrightDefaultBorderBrush}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Control.Background}" Height="{TemplateBinding FrameworkElement.Height}" Width="{TemplateBinding FrameworkElement.Width}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="FrameworkElement.Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <ContentPresenter Name="contentPresenter" Focusable="False" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" HorizontalAlignment="Center" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
              <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource ControlMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="border" Property="Border.Background" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
              <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="border" Property="Border.Background" Value="{StaticResource ControlPrimarySelectedBackground}" />
              <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="border" Property="Border.Background" Value="{StaticResource ControlBrightDefaultBackground}" />
              <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource ControlBrightDefaultBorderBrush}" />
              <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ControlDisabledGlythColour}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="RoundedCorners" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CornerRadius="2">
            <ContentPresenter Name="contentPresenter" Focusable="False" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" HorizontalAlignment="Center" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
              <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource ControlMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="border" Property="Border.Background" Value="#00FFFFFF" />
              <Setter TargetName="border" Property="Border.BorderBrush" Value="#00FFFFFF" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="border" Property="Border.Background" Value="{StaticResource ControlMouseOverBorderBrush}" />
              <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource ControlMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="border" Property="Border.Background" Value="#00FFFFFF" />
              <Setter TargetName="border" Property="Border.BorderBrush" Value="#00FFFFFF" />
              <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#00FFFFFF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Calendar}" TargetType="{x:Type Calendar}">
    <Setter Property="Foreground" Value="{DynamicResource ControlDefaultForeground}" />
    <Setter Property="Background" Value="{DynamicResource ControlDefaultBackground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ControlDefaultBorderBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Calendar}">
          <StackPanel Name="PART_Root" HorizontalAlignment="Center">
            <CalendarItem Name="PART_CalendarItem" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type CalendarItem}" TargetType="{x:Type CalendarItem}">
    <Setter Property="Margin" Value="0,3,0,3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarItem}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                <TextBlock Foreground="{DynamicResource ControlDefaultForeground}" FontWeight="Bold" FontSize="9.5" FontFamily="Verdana" HorizontalAlignment="Center" Margin="0,6,0,6" VerticalAlignment="Center" Text="{Binding}" />
              </DataTemplate>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid Name="PART_Root">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" CornerRadius="1">
              <Border BorderBrush="#00FFFFFF" BorderThickness="2" CornerRadius="1">
                <Grid>
                  <FrameworkElement.Resources>
                    <ResourceDictionary>
                      <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                        <Grid Cursor="Hand">
                          <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                              <VisualState x:Name="Normal" />
                              <VisualState x:Name="MouseOver">
                                <Storyboard>
                                  <ColorAnimation Duration="0" To="#FF73A9D8" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" />
                                </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Disabled">
                                <Storyboard>
                                  <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="path" />
                                </Storyboard>
                              </VisualState>
                            </VisualStateGroup>
                          </VisualStateManager.VisualStateGroups>
                          <Rectangle Fill="#11E5EBF1" Opacity="1" Stretch="Fill" />
                          <Grid>
                            <Path Name="path" Data="M288.75,232.25 L288.75,240.625 L283,236.625" Fill="#FF333333" HorizontalAlignment="Left" Height="10" Margin="14,-6,0,0" Stretch="Fill" VerticalAlignment="Center" Width="6" />
                          </Grid>
                        </Grid>
                      </ControlTemplate>
                      <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                        <Grid Cursor="Hand">
                          <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                              <VisualState x:Name="Normal" />
                              <VisualState x:Name="MouseOver">
                                <Storyboard>
                                  <ColorAnimation Duration="0" To="#FF73A9D8" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" />
                                </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Disabled">
                                <Storyboard>
                                  <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="path" />
                                </Storyboard>
                              </VisualState>
                            </VisualStateGroup>
                          </VisualStateManager.VisualStateGroups>
                          <Rectangle Fill="#11E5EBF1" Opacity="1" Stretch="Fill" />
                          <Grid>
                            <Path Name="path" Data="M282.875,231.875 L282.875,240.375 L288.625,236" Fill="#FF333333" HorizontalAlignment="Right" Height="10" Margin="0,-6,14,0" Stretch="Fill" VerticalAlignment="Center" Width="6" />
                          </Grid>
                        </Grid>
                      </ControlTemplate>
                      <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                        <Grid Cursor="Hand">
                          <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                              <VisualState x:Name="Normal" />
                              <VisualState x:Name="MouseOver">
                                <Storyboard>
                                  <ColorAnimation Duration="0" To="#FF73A9D8" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="buttonContent" />
                                </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Disabled">
                                <Storyboard>
                                  <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="buttonContent" />
                                </Storyboard>
                              </VisualState>
                            </VisualStateGroup>
                          </VisualStateManager.VisualStateGroups>
                          <ContentPresenter Name="buttonContent" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" TextElement.Foreground="#FF333333" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="1,4,1,9" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Grid>
                      </ControlTemplate>
                    </ResourceDictionary>
                  </FrameworkElement.Resources>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <Button Name="PART_PreviousButton" Grid.Column="0" Focusable="False" HorizontalAlignment="Left" Height="20" Grid.Row="0" Width="28" Template="{StaticResource PreviousButtonTemplate}" />
                  <Button Name="PART_HeaderButton" Grid.Column="1" FontWeight="Bold" Focusable="False" FontSize="10.5" HorizontalAlignment="Center" Grid.Row="0" VerticalAlignment="Center" Template="{StaticResource HeaderButtonTemplate}" />
                  <Button Name="PART_NextButton" Grid.Column="2" Focusable="False" HorizontalAlignment="Right" Height="20" Grid.Row="0" Width="28" Template="{StaticResource NextButtonTemplate}" />
                  <Grid Name="PART_MonthView" ColumnSpan="3" HorizontalAlignment="Center" Margin="6,-1,6,6" Row="1" Visibility="Visible">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                  </Grid>
                  <Grid Name="PART_YearView" ColumnSpan="3" HorizontalAlignment="Center" Margin="6,-3,7,6" Row="1" Visibility="Hidden">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                  </Grid>
                </Grid>
              </Border>
            </Border>
            <Rectangle Name="PART_DisabledVisual" Opacity="0" RadiusY="2" RadiusX="2" Stretch="Fill" StrokeThickness="1" Visibility="Collapsed" Fill="{StaticResource ControlDisabledGlythColour}" Stroke="{StaticResource ControlDisabledGlythColour}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="PART_DisabledVisual" Property="Visibility" Value="Visible" />
            </Trigger>
            <DataTrigger Value="Year" Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}">
              <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
              <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Value="Decade" Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}">
              <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
              <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
    <Setter Property="MinHeight" Value="16" />
    <Setter Property="Height" Value="20" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <Grid Name="templateRoot" Background="#00FFFFFF" SnapsToDevicePixels="True" Margin="0">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" MinWidth="16" />
              <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Border Name="checkBoxBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" HorizontalAlignment="Center" VerticalAlignment="Center" Height="16" Width="16" Margin="0">
              <Grid Name="markGrid">
                <Path Name="optionMark" Data="F1 M9.97498,1.22334 L4.6983,9.09834 L4.52164,9.09834 L0,5.19331 L1.27664,3.52165 L4.255,6.08833 L8.33331,1.52588E-05 L9.97498,1.22334" Margin="1" Opacity="0" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{StaticResource ControlPrimaryGlythColour}" />
                <Rectangle Name="indeterminateMark" Margin="0" Opacity="0" Fill="{StaticResource ControlPrimaryDarkerBackground}" />
              </Grid>
            </Border>
            <ContentPresenter Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="Left" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" Margin="3,0,0,0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="True">
              <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
              <Setter Property="Padding" Value="4,-1,0,0" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="checkBoxBorder" Property="Border.Background" Value="{StaticResource ControlMouseOverBackground}" />
              <Setter TargetName="checkBoxBorder" Property="Border.BorderBrush" Value="{StaticResource ControlMouseOverBorderBrush}" />
              <Setter TargetName="optionMark" Property="Shape.Fill" Value="{StaticResource ControlPrimaryMouseOverGlythColour}" />
              <Setter TargetName="indeterminateMark" Property="Shape.Fill" Value="{StaticResource ControlPrimaryMouseOverGlythColour}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="checkBoxBorder" Property="Border.Background" Value="{StaticResource ControlDisabledBackground}" />
              <Setter TargetName="checkBoxBorder" Property="Border.BorderBrush" Value="{StaticResource ControlDisabledBorderBrush}" />
              <Setter TargetName="optionMark" Property="Shape.Fill" Value="{StaticResource ControlPrimaryDisabledGlythColour}" />
              <Setter TargetName="indeterminateMark" Property="Shape.Fill" Value="{StaticResource ControlPrimaryDisabledGlythColour}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="checkBoxBorder" Property="Border.Background" Value="{StaticResource ControlSelectedBackground}" />
              <Setter TargetName="checkBoxBorder" Property="Border.BorderBrush" Value="{StaticResource ControlSelectedBorderBrush}" />
              <Setter TargetName="optionMark" Property="Shape.Fill" Value="{StaticResource ControlPrimarySelectedGlythColour}" />
              <Setter TargetName="indeterminateMark" Property="Shape.Fill" Value="{StaticResource ControlPrimarySelectedGlythColour}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="IsPressed" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="optionMark" Property="Shape.Fill" Value="{StaticResource ControlPrimarySelectedMouseOverGlythColour}" />
              <Setter TargetName="indeterminateMark" Property="Shape.Fill" Value="{StaticResource ControlPrimarySelectedMouseOverGlythColour}" />
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="optionMark" Property="UIElement.Opacity" Value="1" />
              <Setter TargetName="indeterminateMark" Property="UIElement.Opacity" Value="0" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="{x:Null}">
              <Setter TargetName="optionMark" Property="UIElement.Opacity" Value="0" />
              <Setter TargetName="indeterminateMark" Property="UIElement.Opacity" Value="1" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="OptionMarkFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" StrokeThickness="1" StrokeDashArray="1 2" Stroke="{StaticResource ControlDefaultForeground}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="ButtonBase.ClickMode" Value="Press" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="templateRoot" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <Border Name="splitBorder" BorderBrush="#00FFFFFF" BorderThickness="1 0 0 0" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
              <Path Name="arrow" Data="F1 M0,0 L2.667,2.66665 L5.3334,0 L5.3334,-1.78168 L2.6667,0.88501 L0,-1.78168 L0,0" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Fill="{StaticResource ControlGlythColour}" />
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
                <Condition Value="false" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                <Condition Value="false" Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" />
                <Condition Value="true" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="templateRoot" Property="Border.Background" Value="{StaticResource ControlDefaultBackground}" />
              <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
              <Setter TargetName="splitBorder" Property="Border.Background" Value="{StaticResource ControlDefaultBackground}" />
              <Setter TargetName="splitBorder" Property="Border.BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
            </MultiDataTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="arrow" Property="Shape.Fill" Value="{StaticResource ControlMouseOverGlythColour}" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                <Condition Value="false" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="templateRoot" Property="Border.Background" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
              <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                <Condition Value="true" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="templateRoot" Property="Border.Background" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
              <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
              <Setter TargetName="splitBorder" Property="Border.Background" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
              <Setter TargetName="splitBorder" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
            </MultiDataTrigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="arrow" Property="Shape.Fill" Value="{StaticResource ControlSelectedBackground}" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" />
                <Condition Value="false" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="templateRoot" Property="Border.Background" Value="{StaticResource ControlPrimarySelectedBackground}" />
              <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" />
                <Condition Value="true" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="templateRoot" Property="Border.Background" Value="{StaticResource ControlPrimarySelectedBackground}" />
              <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
              <Setter TargetName="splitBorder" Property="Border.Background" Value="{StaticResource ControlPrimarySelectedBackground}" />
              <Setter TargetName="splitBorder" Property="Border.BorderBrush" Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
            </MultiDataTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="arrow" Property="Shape.Fill" Value="{StaticResource ControlDisabledGlythColour}" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
                <Condition Value="false" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="templateRoot" Property="Border.Background" Value="{StaticResource ControlDisabledBackground}" />
              <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="{StaticResource ControlDisabledBorderBrush}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
                <Condition Value="true" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="templateRoot" Property="Border.Background" Value="{StaticResource ControlDisabledBackground}" />
              <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="{StaticResource ControlDisabledBorderBrush}" />
              <Setter TargetName="splitBorder" Property="Border.Background" Value="{StaticResource ControlDisabledBackground}" />
              <Setter TargetName="splitBorder" Property="Border.BorderBrush" Value="{StaticResource ControlDisabledBorderBrush}" />
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
    <Grid Name="templateRoot" SnapsToDevicePixels="True">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
      </Grid.ColumnDefinitions>
      <Popup Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
        <Themes:SystemDropShadowChrome Themes:SystemDropShadowChrome.Name="shadow" Themes:SystemDropShadowChrome.Color="Transparent" FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
          <Border Name="dropDownBorder" BorderThickness="1" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{StaticResource ContainerBackground}">
            <ScrollViewer Name="DropDownScrollViewer">
              <Grid Name="grid" RenderOptions.ClearTypeHint="Enabled">
                <Canvas Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                  <Rectangle Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                </Canvas>
                <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
              </Grid>
            </ScrollViewer>
          </Border>
        </Themes:SystemDropShadowChrome>
      </Popup>
      <ToggleButton Name="toggleButton" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2" Style="{StaticResource ComboBoxToggleButton}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
      <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
        <Setter TargetName="shadow" Property="FrameworkElement.Margin" Value="0,0,5,5" />
        <Setter TargetName="shadow" Property="Themes:SystemDropShadowChrome.Color" Value="#71000000" />
      </Trigger>
      <Trigger Property="ItemsControl.HasItems" Value="False">
        <Setter TargetName="dropDownBorder" Property="FrameworkElement.Height" Value="95" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="ItemsControl.IsGrouping" Value="True" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
      </MultiTrigger>
      <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="TextBoxBase.SelectionBrush" Value="{StaticResource ControlPrimaryCaretSelectionBackground}" />
    <Setter Property="TextBoxBase.CaretBrush" Value="{StaticResource ControlPrimaryCaretBackground}" />
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="UIElement.AllowDrop" Value="True" />
    <Setter Property="MinWidth" Value="0" />
    <Setter Property="MinHeight" Value="0" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer Name="PART_ContentHost" Background="#00FFFFFF" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
    <Grid Name="templateRoot" SnapsToDevicePixels="True">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
      </Grid.ColumnDefinitions>
      <Popup Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
        <Themes:SystemDropShadowChrome Themes:SystemDropShadowChrome.Name="shadow" Themes:SystemDropShadowChrome.Color="Transparent" FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
          <Border Name="dropDownBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" Background="{StaticResource ContainerBackground}">
            <ScrollViewer Name="DropDownScrollViewer">
              <Grid Name="grid" RenderOptions.ClearTypeHint="Enabled">
                <Canvas Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                  <Rectangle Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                </Canvas>
                <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
              </Grid>
            </ScrollViewer>
          </Border>
        </Themes:SystemDropShadowChrome>
      </Popup>
      <ToggleButton Name="toggleButton" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2" Style="{StaticResource ComboBoxToggleButton}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
      <Border Name="border" Background="{TemplateBinding Control.Background}" Margin="{TemplateBinding Control.BorderThickness}">
        <TextBox Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" Style="{StaticResource ComboBoxEditableTextBox}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" />
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter TargetName="border" Property="UIElement.Opacity" Value="0.56" />
      </Trigger>
      <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="True">
        <Setter Property="Control.Foreground" Value="#FF000000" />
      </Trigger>
      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
        <Setter TargetName="shadow" Property="FrameworkElement.Margin" Value="0,0,5,5" />
        <Setter TargetName="shadow" Property="Themes:SystemDropShadowChrome.Color" Value="#71000000" />
      </Trigger>
      <Trigger Property="ItemsControl.HasItems" Value="False">
        <Setter TargetName="dropDownBorder" Property="FrameworkElement.Height" Value="95" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="ItemsControl.IsGrouping" Value="True" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
      </MultiTrigger>
      <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Padding" Value="6,3,5,3" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
    <Style.Triggers>
      <Trigger Property="ComboBox.IsEditable" Value="True">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Padding" Value="4,1" />
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="BorderBrush" Value="#00FFFFFF" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource ControlDisabledGlythColour}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="False" />
                <Condition Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="UIElement.IsKeyboardFocused" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
              <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="True" />
                <Condition Property="UIElement.IsMouseOver" Value="False" />
                <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlPrimarySelectedBackground}" />
              <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="True" />
                <Condition Property="UIElement.IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlPrimarySelectedMouseOverBackground}" />
              <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ControlPrimarySelectedMouseOverBorderBrush}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="True" />
                <Condition Property="UIElement.IsMouseOver" Value="False" />
                <Condition Property="UIElement.IsKeyboardFocused" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlDisabledBackground}" />
              <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ControlDisabledBorderBrush}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="False" />
                <Condition Property="UIElement.IsMouseOver" Value="False" />
                <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="False" />
                <Condition Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
              <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Foreground" Value="{DynamicResource ControlDefaultForeground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Control.Padding}">
            <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
              <Grid.RowDefinitions>
                <RowDefinition Height="19" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="-90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Ellipse Name="circle" HorizontalAlignment="Center" Height="19" VerticalAlignment="Center" Width="19" Fill="{StaticResource ControlDefaultBackground}" Stroke="{StaticResource ControlDefaultBorderBrush}" />
                <Path Name="arrow" Data="M1,1.5 L4.5,5 L8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" StrokeThickness="2" VerticalAlignment="Center" Stroke="{StaticResource ControlGlythColour}" />
              </Grid>
              <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M1,4.5 L4.5,1 L8,4.5" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
              <Setter TargetName="circle" Property="Shape.Fill" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="{StaticResource ControlDefaultForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
              <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5" />
              <Setter TargetName="circle" Property="Shape.Fill" Value="{StaticResource ControlPrimarySelectedBackground}" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="{StaticResource ControlDefaultForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="{StaticResource ControlDisabledBorderBrush}" />
              <Setter TargetName="circle" Property="Shape.Fill" Value="{StaticResource ControlDisabledBackground}" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="{StaticResource ControlDisabledGlythColour}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Control.Padding}">
            <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="19" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="180" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Ellipse Name="circle" HorizontalAlignment="Center" Height="19" VerticalAlignment="Center" Width="19" Fill="{StaticResource ControlDefaultBackground}" Stroke="{StaticResource ControlDefaultBorderBrush}" />
                <Path Name="arrow" Data="M1,1.5 L4.5,5 L8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" StrokeThickness="2" VerticalAlignment="Center" Stroke="{StaticResource ControlGlythColour}" />
              </Grid>
              <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M1,4.5 L4.5,1 L8,4.5" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
              <Setter TargetName="circle" Property="Shape.Fill" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="{StaticResource ControlDefaultForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
              <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5" />
              <Setter TargetName="circle" Property="Shape.Fill" Value="{StaticResource ControlPrimarySelectedBackground}" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="{StaticResource ControlDefaultForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="{StaticResource ControlDisabledBorderBrush}" />
              <Setter TargetName="circle" Property="Shape.Fill" Value="{StaticResource ControlDisabledBackground}" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="{StaticResource ControlDisabledGlythColour}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Control.Padding}">
            <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
              <Grid.RowDefinitions>
                <RowDefinition Height="19" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Ellipse Name="circle" HorizontalAlignment="Center" Height="19" VerticalAlignment="Center" Width="19" Fill="{StaticResource ControlDefaultBackground}" Stroke="{StaticResource ControlDefaultBorderBrush}" />
                <Path Name="arrow" Data="M1,1.5 L4.5,5 L8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" StrokeThickness="2" VerticalAlignment="Center" Stroke="{StaticResource ControlGlythColour}" />
              </Grid>
              <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M1,4.5 L4.5,1 L8,4.5" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
              <Setter TargetName="circle" Property="Shape.Fill" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="{StaticResource ControlDefaultForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
              <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5" />
              <Setter TargetName="circle" Property="Shape.Fill" Value="{StaticResource ControlPrimarySelectedBackground}" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="{StaticResource ControlDefaultForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="{StaticResource ControlDisabledBorderBrush}" />
              <Setter TargetName="circle" Property="Shape.Fill" Value="{StaticResource ControlDisabledBackground}" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="{StaticResource ControlDisabledGlythColour}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderHeaderFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="#FF000000" StrokeThickness="1" StrokeDashArray="1 2" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Control.Padding}">
            <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="19" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Ellipse Name="circle" Fill="{DynamicResource ControlDefaultBackground}" HorizontalAlignment="Center" Height="19" VerticalAlignment="Center" Width="19" Stroke="{StaticResource ControlDefaultBorderBrush}" />
              <Path Name="arrow" Data="M1,1.5 L4.5,5 L8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="{DynamicResource ControlDefaultForeground}" StrokeThickness="2" VerticalAlignment="Center" />
              <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M1,4.5 L4.5,1 L8,4.5" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
              <Setter TargetName="circle" Property="Shape.Fill" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="{StaticResource ControlDefaultForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
              <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5" />
              <Setter TargetName="circle" Property="Shape.Fill" Value="{StaticResource ControlPrimarySelectedBackground}" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="{StaticResource ControlDefaultForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="{StaticResource ControlDisabledBorderBrush}" />
              <Setter TargetName="circle" Property="Shape.Fill" Value="{StaticResource ControlDisabledBackground}" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="{StaticResource ControlDisabledGlythColour}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Expander}" TargetType="{x:Type Expander}">
    <Setter Property="Foreground" Value="{DynamicResource ControlDefaultForeground}" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="BorderBrush" Value="#00FFFFFF" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FontStyle" Value="Normal" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" CornerRadius="3" SnapsToDevicePixels="True">
            <DockPanel>
              <ToggleButton Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderedContentControl.HeaderTemplateSelector}" Content="{TemplateBinding HeaderedContentControl.Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Control.Foreground}" FontWeight="{TemplateBinding Control.FontWeight}" FontStyle="{TemplateBinding Control.FontStyle}" FontStretch="{TemplateBinding Control.FontStretch}" FontSize="{TemplateBinding Control.FontSize}" FontFamily="{TemplateBinding Control.FontFamily}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Control.Padding}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" Style="{StaticResource ExpanderDownHeaderStyle}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
              <ContentPresenter Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Expander.IsExpanded" Value="True">
              <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Right">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
              <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Up">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
              <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Left">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
              <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{StaticResource ControlDisabledGlythColour}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="GridSplitterPreviewStyle">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Fill="{DynamicResource ControlDefaultBackground}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type GridSplitter}" TargetType="{x:Type GridSplitter}">
    <Setter Property="Background" Value="{DynamicResource ControlDefaultBackground}" />
    <Setter Property="GridSplitter.PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridSplitter}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />
  <Style x:Key="{x:Type GroupBox}" TargetType="{x:Type GroupBox}">
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBackground}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="BorderThickness" Value="3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GroupBox}">
          <Grid SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="6" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition />
              <ColumnDefinition Width="6" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="32" MinHeight="32" />
              <RowDefinition />
              <RowDefinition Height="6" />
            </Grid.RowDefinitions>
            <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="4" Grid.Column="0" CornerRadius="0" Grid.Row="1" Grid.RowSpan="3" />
            <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Grid.ColumnSpan="4" CornerRadius="0" Grid.Row="1" Grid.RowSpan="3">
              <UIElement.OpacityMask>
                <MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
                  <Binding ElementName="Header" Path="ActualWidth" />
                  <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                  <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
              </UIElement.OpacityMask>
            </Border>
            <Rectangle Fill="{TemplateBinding Control.BorderBrush}" Grid.ColumnSpan="4" Grid.RowSpan="2" />
            <Border Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
              <ContentPresenter VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Border>
            <ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="0,3,0,0" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="OriginalGroupBox" TargetType="{x:Type GroupBox}">
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBackground}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GroupBox}">
          <Grid SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="6" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="6" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="6" />
            </Grid.RowDefinitions>
            <Border BorderBrush="#00FFFFFF" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="4" Grid.Column="0" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" />
            <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Grid.ColumnSpan="4" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3">
              <UIElement.OpacityMask>
                <MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
                  <Binding ElementName="Header" Path="ActualWidth" />
                  <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                  <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
              </UIElement.OpacityMask>
              <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3">
                <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" />
              </Border>
            </Border>
            <Border Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
              <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Border>
            <ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Control.Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="L" TargetType="{x:Type Label}">
    <Setter Property="Foreground" Value="{StaticResource ControlLForeground}" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="Padding" Value="5" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Label}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{StaticResource ControlDisabledGlythColour}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlBrightDefaultBorderBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="1" SnapsToDevicePixels="True">
            <ScrollViewer Focusable="False" Padding="{TemplateBinding Control.Padding}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlDisabledBackground}" />
              <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ControlDisabledBackground}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ItemsControl.IsGrouping" Value="True" />
                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HorizontalListbox" TargetType="{x:Type ListBox}">
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlBrightDefaultBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
    <Setter Property="ScrollViewer.PanningMode" Value="HorizontalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="1" SnapsToDevicePixels="True">
            <ScrollViewer Focusable="False" Padding="{TemplateBinding Control.Padding}" Style="{DynamicResource HorizontalScroller}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlDisabledBackground}" />
              <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ControlDisabledBackground}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ItemsControl.IsGrouping" Value="True" />
                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="BorderBrush" Value="#00FFFFFF" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Border.Background" Value="#00FFFFFF" />
              <Setter TargetName="Bd" Property="Border.BorderBrush" Value="#00FFFFFF" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Selector.IsSelectionActive" Value="False" />
                <Condition Property="ListBoxItem.IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Border.Background" Value="#00FFFFFF" />
              <Setter TargetName="Bd" Property="Border.BorderBrush" Value="#00FFFFFF" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Selector.IsSelectionActive" Value="True" />
                <Condition Property="ListBoxItem.IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Border.Background" Value="#00FFFFFF" />
              <Setter TargetName="Bd" Property="Border.BorderBrush" Value="#00FFFFFF" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource ControlDisabledGlythColour}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ListView}" TargetType="{x:Type ListView}">
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlBrightDefaultBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="1" SnapsToDevicePixels="True">
            <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
              <ItemsPresenter />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlDisabledBackground}" />
              <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ControlDisabledBackground}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ItemsControl.IsGrouping" Value="True" />
                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Selector.IsSelectionActive" Value="False" />
                <Condition Property="Selector.IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlDefaultBackground}" />
              <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid Background="{TemplateBinding Control.Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <DockPanel Margin="{TemplateBinding Control.Padding}">
              <ScrollViewer DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Focusable="False">
                <GridViewHeaderRowPresenter Margin="2,0,2,0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}" />
              </ScrollViewer>
              <ScrollContentPresenter Name="PART_ScrollContentPresenter" KeyboardNavigation.DirectionalNavigation="Local" CanContentScroll="True" CanHorizontallyScroll="False" CanVerticallyScroll="False" />
            </DockPanel>
            <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Value="{TemplateBinding ScrollViewer.HorizontalOffset}" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" />
            <ScrollBar Name="PART_VerticalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Value="{TemplateBinding ScrollViewer.VerticalOffset}" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
    <Setter Property="Width" Value="18" />
    <Setter Property="Background" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Control.Padding}" Background="#00FFFFFF">
            <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Control.Background}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Name="HeaderBorder" BorderThickness="0,1,0,1" Padding="2,0,2,0" BorderBrush="{StaticResource ControlDefaultBorderBrush}" Background="{StaticResource ControlDefaultBackground}">
              <ContentPresenter Name="HeaderContent" Margin="0,0,0,1" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Border>
            <Thumb Name="PART_HeaderGripper" HorizontalAlignment="Right" Margin="0,0,-9,0" Style="{StaticResource GridViewColumnHeaderGripper}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="HeaderBorder" Property="Border.Background" Value="{StaticResource ControlDisabledBackground}" />
              <Setter TargetName="HeaderBorder" Property="Border.BorderBrush" Value="{StaticResource ControlDisabledBackground}" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="HeaderBorder" Property="Border.Background" Value="{StaticResource ControlMouseOverBackground}" />
              <Setter TargetName="HeaderBorder" Property="Border.BorderBrush" Value="{StaticResource ControlMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="HeaderBorder" Property="Border.Background" Value="{StaticResource ControlSelectedBackground}" />
              <Setter TargetName="HeaderBorder" Property="Border.BorderBrush" Value="{StaticResource ControlSelectedBorderBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="GridViewColumnHeader.Role" Value="Floating">
        <Setter Property="UIElement.Opacity" Value="0.7" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Canvas Name="PART_FloatingHeaderCanvas">
                <Rectangle Fill="#60000000" Width="{TemplateBinding FrameworkElement.ActualWidth}" Height="{TemplateBinding FrameworkElement.ActualHeight}" />
              </Canvas>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="GridViewColumnHeader.Role" Value="Padding">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Border Name="HeaderBorder" BorderThickness="0,1,0,1" Background="{StaticResource ContainerBackground}" BorderBrush="{StaticResource ContainerBorder}" />
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type ListViewItem}" TargetType="{x:Type ListViewItem}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Padding" Value="4,1" />
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="BorderBrush" Value="#00FFFFFF" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Border Name="Bd" Padding="2" SnapsToDevicePixels="True" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}">
            <GridViewRowPresenter VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
              <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Selector.IsSelectionActive" Value="False" />
                <Condition Property="ListBoxItem.IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlPrimaryDisabledBackground}" />
              <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryDisabledBorderBrush}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Selector.IsSelectionActive" Value="True" />
                <Condition Property="ListBoxItem.IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlPrimarySelectedBackground}" />
              <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource ControlDisabledGlythColour}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
    <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Grid.IsSharedSizeScope" Value="True" />
    <Setter Property="ContextMenu.HasDropShadow" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContextMenu}">
          <Themes:SystemDropShadowChrome FrameworkElement.Name="Shdw" Themes:SystemDropShadowChrome.Color="Transparent" Themes:SystemDropShadowChrome.CornerRadius="0" UIElement.SnapsToDevicePixels="True">
            <Border Name="Border" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="2">
              <ScrollViewer Name="ScrollViewer" VerticalScrollBarVisibility="Hidden">
                <ItemsPresenter />
              </ScrollViewer>
            </Border>
          </Themes:SystemDropShadowChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ContextMenu.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="Themes:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
    <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
    <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
    <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Border Name="templateRoot" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <Grid Name="Grid" VerticalAlignment="Center">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <ContentPresenter Name="Icon" Content="{TemplateBinding MenuItem.Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" Width="16" />
              <Path Name="GlyphPanel" Data="F1 M10,1.2 L4.7,9.1 L4.5,9.1 L0,5.2 L1.3,3.5 L4.3,6.1 L8.3,0 L10,1.2" Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center" />
              <ContentPresenter Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderedItemsControl.HeaderTemplate}" Content="{TemplateBinding HeaderedItemsControl.Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
              <Popup Name="PART_Popup" AllowsTransparency="True" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                <Themes:SystemDropShadowChrome FrameworkElement.Name="Shdw" Themes:SystemDropShadowChrome.Color="#71000000" Themes:SystemDropShadowChrome.CornerRadius="0" UIElement.SnapsToDevicePixels="True" FrameworkElement.Margin="0 0 5 5">
                  <Border Name="SubMenuBorder" BorderThickness="1" Padding="0" BorderBrush="{StaticResource ControlDefaultBorderBrush}" Background="{StaticResource ControlDefaultBackground}">
                    <ScrollViewer Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                      <Grid Name="Grid1" RenderOptions.ClearTypeHint="Enabled">
                        <Canvas Name="Canvas" HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Stretch" Width="22">
                          <Rectangle Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}" />
                        </Canvas>
                        <Rectangle Name="Rectangle" HorizontalAlignment="Left" Margin="22,0,0,0" Width="1" Fill="{StaticResource ControlDarkerBorderBrush}" />
                        <Rectangle HorizontalAlignment="Left" Margin="0" Width="22" Fill="{StaticResource ControlBrightDefaultBackground}" />
                        <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" />
                      </Grid>
                    </ScrollViewer>
                  </Border>
                </Themes:SystemDropShadowChrome>
              </Popup>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
              <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="MenuItem.Icon" Value="{x:Null}">
              <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="MenuItem.IsChecked" Value="True">
              <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
              <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
              <Setter TargetName="templateRoot" Property="Border.Background" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
              <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource ControlDisabledGlythColour}" />
            </Trigger>
            <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
              <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
              <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="DropDownMenuItemStyle" TargetType="{x:Type MenuItem}">
    <Border Name="templateRoot" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
      <Grid Margin="-1">
        <Grid.ColumnDefinitions>
          <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto" />
          <ColumnDefinition Width="13" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="30" />
          <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto" />
          <ColumnDefinition Width="20" />
        </Grid.ColumnDefinitions>
        <ContentPresenter Name="Icon" Content="{TemplateBinding MenuItem.Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" Width="16" />
        <Border Name="GlyphPanel" BorderBrush="#FF26A0DA" BorderThickness="1" Background="#3D26A0DA" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
          <Path Name="Glyph" Data="F1 M10,1.2 L4.7,9.1 L4.5,9.1 L0,5.2 L1.3,3.5 L4.3,6.1 L8.3,0 L10,1.2" Fill="#FF212121" FlowDirection="LeftToRight" Height="11" Width="9" />
        </Border>
        <ContentPresenter ContentTemplate="{TemplateBinding HeaderedItemsControl.HeaderTemplate}" Content="{TemplateBinding HeaderedItemsControl.Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" />
        <TextBlock Grid.Column="4" Margin="{TemplateBinding Control.Padding}" Opacity="0.7" Text="{TemplateBinding MenuItem.InputGestureText}" VerticalAlignment="Center" />
        <Path Name="RightArrow" Grid.Column="5" Data="M0,0 L4,3.5 L0,7" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" Fill="{StaticResource ControlGlythColour}" />
        <Popup Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
          <Themes:SystemDropShadowChrome FrameworkElement.Name="Shdw" Themes:SystemDropShadowChrome.Color="#71000000" Themes:SystemDropShadowChrome.CornerRadius="0" UIElement.SnapsToDevicePixels="True" FrameworkElement.Margin="0 0 5 5">
            <Border Name="SubMenuBorder" BorderThickness="1" Padding="0" BorderBrush="{StaticResource ControlDefaultBorderBrush}" Background="{StaticResource ControlDefaultBackground}">
              <ScrollViewer Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                <Grid RenderOptions.ClearTypeHint="Enabled">
                  <Canvas Name="Canvas" HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Stretch" Width="22">
                    <Rectangle Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}" />
                  </Canvas>
                  <Rectangle Name="Rectangle" HorizontalAlignment="Left" Margin="22,0,0,0" Width="1" Fill="{StaticResource ControlDarkerBorderBrush}" />
                  <Rectangle HorizontalAlignment="Left" Margin="0" Width="22" Fill="{StaticResource ControlBrightDefaultBackground}" />
                  <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" />
                </Grid>
              </ScrollViewer>
            </Border>
          </Themes:SystemDropShadowChrome>
        </Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
        <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
      </Trigger>
      <Trigger Property="MenuItem.Icon" Value="{x:Null}">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="True">
        <Setter TargetName="templateRoot" Property="Border.Background" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
        <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource ControlDisabledGlythColour}" />
        <Setter TargetName="Glyph" Property="Shape.Fill" Value="{StaticResource ControlDisabledGlythColour}" />
        <Setter TargetName="RightArrow" Property="Shape.Fill" Value="{StaticResource ControlDisabledGlythColour}" />
      </Trigger>
      <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
        <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
        <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="SingleDropDownMenuItem" TargetType="{x:Type MenuItem}">
    <Border Name="templateRoot" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
      <Grid Margin="-1">
        <Grid.ColumnDefinitions>
          <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto" />
          <ColumnDefinition Width="13" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="30" />
          <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto" />
          <ColumnDefinition Width="20" />
        </Grid.ColumnDefinitions>
        <ContentPresenter Name="Icon" Content="{TemplateBinding MenuItem.Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" Width="16" />
        <Border Name="GlyphPanel" BorderBrush="#FF26A0DA" BorderThickness="1" Background="#3D26A0DA" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
          <Path Name="Glyph" Data="F1 M10,1.2 L4.7,9.1 L4.5,9.1 L0,5.2 L1.3,3.5 L4.3,6.1 L8.3,0 L10,1.2" Fill="#FF212121" FlowDirection="LeftToRight" Height="11" Width="9" />
        </Border>
        <ContentPresenter ContentTemplate="{TemplateBinding HeaderedItemsControl.HeaderTemplate}" Content="{TemplateBinding HeaderedItemsControl.Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" />
        <TextBlock Grid.Column="4" Margin="{TemplateBinding Control.Padding}" Opacity="0.7" Text="{TemplateBinding MenuItem.InputGestureText}" VerticalAlignment="Center" />
        <Path Name="RightArrow" Grid.Column="5" Data="M0,0 L4,3.5 L0,7" Visibility="Hidden" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" Fill="{StaticResource ControlGlythColour}" />
        <Popup Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
          <Border Name="SubMenuBorder" BorderThickness="1" Padding="0" BorderBrush="{StaticResource ControlDefaultBorderBrush}" Background="{StaticResource ControlDefaultBackground}">
            <ScrollViewer Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
              <Grid RenderOptions.ClearTypeHint="Enabled">
                <Canvas Name="Canvas" HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Stretch" Width="22">
                  <Rectangle Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}" />
                </Canvas>
                <Rectangle Name="Rectangle" HorizontalAlignment="Left" Margin="22,0,0,0" Width="1" Fill="{StaticResource ControlDarkerBorderBrush}" />
                <Rectangle HorizontalAlignment="Left" Margin="0" Width="22" Fill="{StaticResource ControlBrightDefaultBackground}" />
                <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" />
              </Grid>
            </ScrollViewer>
          </Border>
        </Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
        <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
      </Trigger>
      <Trigger Property="MenuItem.Icon" Value="{x:Null}">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="True">
        <Setter TargetName="templateRoot" Property="Border.Background" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
        <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource ControlDisabledGlythColour}" />
        <Setter TargetName="Glyph" Property="Shape.Fill" Value="{StaticResource ControlDisabledGlythColour}" />
        <Setter TargetName="RightArrow" Property="Shape.Fill" Value="{StaticResource ControlDisabledGlythColour}" />
      </Trigger>
      <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
        <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
        <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type PasswordBox}" TargetType="{x:Type PasswordBox}">
    <Setter Property="PasswordBox.PasswordChar" Value="●" />
    <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="PasswordBox.CaretBrush" Value="{StaticResource ControlPrimaryCaretBackground}" />
    <Setter Property="PasswordBox.SelectionBrush" Value="{StaticResource ControlPrimaryCaretSelectionBackground}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="UIElement.AllowDrop" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <Border Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <ScrollViewer Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="border" Property="UIElement.Opacity" Value="0.56" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
              <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="PasswordBox.IsInactiveSelectionHighlightEnabled" Value="True" />
          <Condition Property="PasswordBox.IsSelectionActive" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="PasswordBox.SelectionBrush" Value="{StaticResource ControlPrimaryDisabledGlythColour}" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
    <Setter Property="Foreground" Value="{StaticResource ControlPrimaryDefaultBackground}" />
    <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ProgressBar}">
          <Grid Name="TemplateRoot">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Determinate" />
                <VisualState x:Name="Indeterminate">
                  <Storyboard RepeatBehavior="Forever">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                      <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25" />
                      <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25" />
                    </DoubleAnimationUsingKeyFrames>
                    <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                      <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
                      <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
                      <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
                    </PointAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" />
            <Rectangle Name="PART_Track" />
            <Grid Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left" Margin="1">
              <Rectangle Name="Indicator" Fill="{TemplateBinding Control.Foreground}" />
              <Rectangle Name="Animation" Fill="{TemplateBinding Control.Foreground}" RenderTransformOrigin="0.5,0.5">
                <UIElement.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                  </TransformGroup>
                </UIElement.RenderTransform>
              </Rectangle>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ProgressBar.Orientation" Value="Vertical">
              <Setter TargetName="TemplateRoot" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="ProgressBar.IsIndeterminate" Value="True">
              <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="MinHeight" Value="16" />
    <Setter Property="Height" Value="20" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RadioButton}">
          <Grid Name="templateRoot" Background="#00FFFFFF" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" MinWidth="16" />
              <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Border Name="radioButtonBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" CornerRadius="6" HorizontalAlignment="Center" VerticalAlignment="Center" Height="16" Width="16">
              <Grid Name="markGrid" Margin="2">
                <Ellipse Name="optionMark" Fill="{DynamicResource ControlPrimaryGlythColour}" MinWidth="6" MinHeight="6" Opacity="0" />
              </Grid>
            </Border>
            <ContentPresenter Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="Left" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" Margin="3 0 0 0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="True">
              <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
              <Setter Property="Padding" Value="4,-1,0,0" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="radioButtonBorder" Property="Border.Background" Value="{StaticResource ControlMouseOverBackground}" />
              <Setter TargetName="radioButtonBorder" Property="Border.BorderBrush" Value="{StaticResource ControlMouseOverBorderBrush}" />
              <Setter TargetName="optionMark" Property="Shape.Fill" Value="{StaticResource ControlPrimaryMouseOverGlythColour}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="radioButtonBorder" Property="Border.Background" Value="{StaticResource ControlDisabledBackground}" />
              <Setter TargetName="radioButtonBorder" Property="Border.BorderBrush" Value="{StaticResource ControlDisabledBorderBrush}" />
              <Setter TargetName="optionMark" Property="Shape.Fill" Value="{StaticResource ControlPrimaryDisabledGlythColour}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="radioButtonBorder" Property="Border.Background" Value="{StaticResource ControlSelectedBackground}" />
              <Setter TargetName="radioButtonBorder" Property="Border.BorderBrush" Value="{StaticResource ControlSelectedBorderBrush}" />
              <Setter TargetName="optionMark" Property="Shape.Fill" Value="{StaticResource ControlPrimarySelectedGlythColour}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="IsPressed" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="optionMark" Property="Shape.Fill" Value="{StaticResource ControlPrimarySelectedMouseOverGlythColour}" />
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="optionMark" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="{x:Null}">
              <Setter TargetName="optionMark" Property="UIElement.Opacity" Value="0.56" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type RichTextBox}" TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource ResourceKey={x:Type TextBoxBase}}">
    <Style.Resources>
      <ResourceDictionary>
        <Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
          <Setter Property="FrameworkContentElement.OverridesDefaultStyle" Value="True" />
        </Style>
        <Style x:Key="{x:Type Hyperlink}" BasedOn="{StaticResource {x:Type Hyperlink}}" TargetType="{x:Type Hyperlink}">
          <Style.Triggers>
            <Trigger Property="ContentElement.IsMouseOver" Value="True">
              <Setter Property="Foreground" Value="#FF0000FF" />
            </Trigger>
            <Trigger Property="ContentElement.IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </Style.Triggers>
        </Style>
      </ResourceDictionary>
    </Style.Resources>
    <Setter Property="MinWidth" Value="10" />
  </Style>
  <Style x:Key="{x:Type TextBoxBase}" TargetType="{x:Type TextBoxBase}">
    <Setter Property="Background" Value="{StaticResource ContainerBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="TextBoxBase.CaretBrush" Value="{StaticResource ControlPrimaryCaretBackground}" />
    <Setter Property="TextBoxBase.SelectionBrush" Value="{StaticResource ControlPrimaryCaretSelectionBackground}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="UIElement.AllowDrop" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <Border Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <ScrollViewer Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="border" Property="UIElement.Opacity" Value="0.56" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource ControlMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
              <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource ControlSelectedBorderBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="TextBoxBase.IsInactiveSelectionHighlightEnabled" Value="True" />
          <Condition Property="TextBoxBase.IsSelectionActive" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="TextBoxBase.SelectionBrush" Value="{StaticResource ControlDisabledGlythColour}" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
    <Setter Property="Foreground" Value="{StaticResource ControlPrimaryCaretBackground}" />
    <Setter Property="Inline.TextDecorations" Value="Underline" />
    <Style.Triggers>
      <Trigger Property="ContentElement.IsMouseOver" Value="True">
        <Setter Property="Foreground" Value="{StaticResource ControlPrimaryBrightDefaultBackground}" />
      </Trigger>
      <Trigger Property="ContentElement.IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{StaticResource ControlDisabledGlythColour}" />
      </Trigger>
      <Trigger Property="ContentElement.IsEnabled" Value="True">
        <Setter Property="FrameworkContentElement.Cursor" Value="Hand" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="True" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ControlBrightDefaultBorderBrush}" />
    <Setter Property="BorderThickness" Value="1,0" />
    <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid Name="Bg" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
              <RowDefinition Height="0.00001*" />
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
            </Grid.RowDefinitions>
            <Button Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" BorderThickness="1 1 1 0">
              <Path Name="ArrowTop" Data="M0,4 C0,4 0,6 0,6 C0,6 3.5,2.5 3.5,2.5 C3.5,2.5 7,6 7,6 C7,6 7,4 7,4 C7,4 3.5,0.5 3.5,0.5 C3.5,0.5 0,4 0,4" Margin="3,4,3,3" Stretch="Uniform" Fill="{StaticResource ControlGlythColour}" />
            </Button>
            <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1 0 1 0" Background="{TemplateBinding Control.Background}" Grid.Row="1">
              <Track Name="PART_Track" IsDirectionReversed="True" Grid.Row="1">
                <Track.DecreaseRepeatButton>
                  <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                  <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                  <Thumb Style="{DynamicResource ScrollBarThumbVertical}" />
                </Track.Thumb>
              </Track>
            </Border>
            <Button Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" BorderThickness="1 0 1 1" Grid.Row="2">
              <Path Name="ArrowBottom" Data="M0,2.5 C0,2.5 0,0.5 0,0.5 C0,0.5 3.5,4 3.5,4 C3.5,4 7,0.5 7,0.5 C7,0.5 7,2.5 7,2.5 C7,2.5 3.5,6 3.5,6 C3.5,6 0,2.5 0,2.5" Margin="3,4,3,3" Stretch="Uniform" Fill="{StaticResource ControlGlythColour}" />
            </Button>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
                <Condition Value="true" Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="ArrowBottom" Property="Shape.Fill" Value="{StaticResource ControlSelectedGlythColour}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
                <Condition Value="true" Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="ArrowTop" Property="Shape.Fill" Value="{StaticResource ControlSelectedGlythColour}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
                <Condition Value="false" Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="ArrowBottom" Property="Shape.Fill" Value="{StaticResource ControlMouseOverGlythColour}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
                <Condition Value="false" Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="ArrowTop" Property="Shape.Fill" Value="{StaticResource ControlMouseOverGlythColour}" />
            </MultiDataTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="ArrowTop" Property="Shape.Fill" Value="{StaticResource ControlDisabledGlythColour}" />
              <Setter TargetName="ArrowBottom" Property="Shape.Fill" Value="{StaticResource ControlDisabledGlythColour}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ControlBrightDefaultBorderBrush}" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
              <Grid Name="Bg" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                  <ColumnDefinition Width="0.00001*" />
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                </Grid.ColumnDefinitions>
                <Button Name="PART_LineLeftButton" BorderThickness="1 1 0 1" Command="{x:Static ScrollBar.LineLeftCommand}">
                  <Path Name="ArrowLeft" Data="M3.18,7 C3.18,7 5,7 5,7 C5,7 1.81,3.5 1.81,3.5 C1.81,3.5 5,0 5,0 C5,0 3.18,0 3.18,0 C3.18,0 0,3.5 0,3.5 C0,3.5 3.18,7 3.18,7" Margin="3" Stretch="Uniform" Fill="{StaticResource ControlGlythColour}" />
                </Button>
                <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0 1 0 1" Background="{TemplateBinding Control.Background}" Grid.Column="1">
                  <Track Name="PART_Track" Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                      <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                      <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                      <Thumb Style="{DynamicResource ScrollBarThumbHorizontal}" />
                    </Track.Thumb>
                  </Track>
                </Border>
                <Button Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" BorderThickness="0 1 1 1">
                  <Path Name="ArrowRight" Data="M1.81,7 C1.81,7 0,7 0,7 C0,7 3.18,3.5 3.18,3.5 C3.18,3.5 0,0 0,0 C0,0 1.81,0 1.81,0 C1.81,0 5,3.5 5,3.5 C5,3.5 1.81,7 1.81,7" Margin="3" Stretch="Uniform" Fill="{StaticResource ControlGlythColour}" />
                </Button>
              </Grid>
              <ControlTemplate.Triggers>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
                    <Condition Value="true" Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
                  </MultiDataTrigger.Conditions>
                  <Setter TargetName="ArrowRight" Property="Shape.Fill" Value="{StaticResource ControlSelectedGlythColour}" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
                    <Condition Value="true" Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
                  </MultiDataTrigger.Conditions>
                  <Setter TargetName="ArrowLeft" Property="Shape.Fill" Value="{StaticResource ControlSelectedGlythColour}" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
                    <Condition Value="false" Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
                  </MultiDataTrigger.Conditions>
                  <Setter TargetName="ArrowRight" Property="Shape.Fill" Value="{StaticResource ControlMouseOverGlythColour}" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
                    <Condition Value="false" Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
                  </MultiDataTrigger.Conditions>
                  <Setter TargetName="ArrowLeft" Property="Shape.Fill" Value="{StaticResource ControlMouseOverGlythColour}" />
                </MultiDataTrigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter TargetName="ArrowLeft" Property="Shape.Fill" Value="{StaticResource ControlDisabledGlythColour}" />
                  <Setter TargetName="ArrowRight" Property="Shape.Fill" Value="{StaticResource ControlDisabledGlythColour}" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="HorizontalScrollerBar" TargetType="{x:Type ScrollBar}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="True" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ControlBrightDefaultBorderBrush}" />
    <Setter Property="BorderThickness" Value="1,0" />
    <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid Name="Bg" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
              <RowDefinition Height="0.00001*" />
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
            </Grid.RowDefinitions>
            <Button Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" BorderThickness="1 1 1 0">
              <Path Name="ArrowTop" Data="M0,4 C0,4 0,6 0,6 C0,6 3.5,2.5 3.5,2.5 C3.5,2.5 7,6 7,6 C7,6 7,4 7,4 C7,4 3.5,0.5 3.5,0.5 C3.5,0.5 0,4 0,4" Margin="3,4,3,3" Stretch="Uniform" Fill="{StaticResource ControlGlythColour}" />
            </Button>
            <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1 0 1 0" Background="{TemplateBinding Control.Background}" Grid.Row="1">
              <Track Name="PART_Track" IsDirectionReversed="True" Grid.Row="1">
                <Track.DecreaseRepeatButton>
                  <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                  <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                  <Thumb Style="{DynamicResource ScrollBarThumbVertical}" />
                </Track.Thumb>
              </Track>
            </Border>
            <Button Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" BorderThickness="1 0 1 1" Grid.Row="2">
              <Path Name="ArrowBottom" Data="M0,2.5 C0,2.5 0,0.5 0,0.5 C0,0.5 3.5,4 3.5,4 C3.5,4 7,0.5 7,0.5 C7,0.5 7,2.5 7,2.5 C7,2.5 3.5,6 3.5,6 C3.5,6 0,2.5 0,2.5" Margin="3,4,3,3" Stretch="Uniform" Fill="{StaticResource ControlGlythColour}" />
            </Button>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
                <Condition Value="true" Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="ArrowBottom" Property="Shape.Fill" Value="{StaticResource ControlSelectedGlythColour}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
                <Condition Value="true" Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="ArrowTop" Property="Shape.Fill" Value="{StaticResource ControlSelectedGlythColour}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
                <Condition Value="false" Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="ArrowBottom" Property="Shape.Fill" Value="{StaticResource ControlMouseOverGlythColour}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
                <Condition Value="false" Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="ArrowTop" Property="Shape.Fill" Value="{StaticResource ControlMouseOverGlythColour}" />
            </MultiDataTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="ArrowTop" Property="Shape.Fill" Value="{StaticResource ControlDisabledGlythColour}" />
              <Setter TargetName="ArrowBottom" Property="Shape.Fill" Value="{StaticResource ControlDisabledGlythColour}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ControlBrightDefaultBorderBrush}" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="RangeBase.SmallChange" Value="250" />
        <Setter Property="RangeBase.LargeChange" Value="500" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
              <Grid Name="Bg" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                  <ColumnDefinition Width="0.00001*" />
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                </Grid.ColumnDefinitions>
                <Button Name="PART_LineLeftButton" BorderThickness="1" Command="{x:Static ScrollBar.LineLeftCommand}">
                  <Path Name="ArrowLeft" Data="M3.18,7 C3.18,7 5,7 5,7 C5,7 1.81,3.5 1.81,3.5 C1.81,3.5 5,0 5,0 C5,0 3.18,0 3.18,0 C3.18,0 0,3.5 0,3.5 C0,3.5 3.18,7 3.18,7" Margin="3" Stretch="Uniform" Fill="{StaticResource ControlGlythColour}" />
                </Button>
                <Button Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" BorderThickness="1">
                  <Path Name="ArrowRight" Data="M1.81,7 C1.81,7 0,7 0,7 C0,7 3.18,3.5 3.18,3.5 C3.18,3.5 0,0 0,0 C0,0 1.81,0 1.81,0 C1.81,0 5,3.5 5,3.5 C5,3.5 1.81,7 1.81,7" Margin="3" Stretch="Uniform" Fill="{StaticResource ControlGlythColour}" />
                </Button>
              </Grid>
              <ControlTemplate.Triggers>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
                    <Condition Value="true" Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
                  </MultiDataTrigger.Conditions>
                  <Setter TargetName="ArrowRight" Property="Shape.Fill" Value="{StaticResource ControlSelectedGlythColour}" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
                    <Condition Value="true" Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
                  </MultiDataTrigger.Conditions>
                  <Setter TargetName="ArrowLeft" Property="Shape.Fill" Value="{StaticResource ControlSelectedGlythColour}" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
                    <Condition Value="false" Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
                  </MultiDataTrigger.Conditions>
                  <Setter TargetName="ArrowRight" Property="Shape.Fill" Value="{StaticResource ControlMouseOverGlythColour}" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
                    <Condition Value="false" Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
                  </MultiDataTrigger.Conditions>
                  <Setter TargetName="ArrowLeft" Property="Shape.Fill" Value="{StaticResource ControlMouseOverGlythColour}" />
                </MultiDataTrigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter TargetName="ArrowLeft" Property="Shape.Fill" Value="{StaticResource ControlDisabledGlythColour}" />
                  <Setter TargetName="ArrowRight" Property="Shape.Fill" Value="{StaticResource ControlDisabledGlythColour}" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border Name="border" BorderThickness="1" SnapsToDevicePixels="True" BorderBrush="{StaticResource ControlDefaultBorderBrush}" Background="{StaticResource ControlDefaultBackground}">
            <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="border" Property="Border.Background" Value="{StaticResource ControlDefaultBackground}" />
              <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="False">
              <Setter TargetName="border" Property="Border.Background" Value="{StaticResource ControlDefaultBackground}" />
              <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="border" Property="Border.Background" Value="{StaticResource ControlSelectedBackground}" />
              <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource ControlSelectedBackground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
              <Setter TargetName="border" Property="Border.Background" Value="{StaticResource ControlDisabledBackground}" />
              <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource ControlDisabledBorderBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Background" Value="{StaticResource ControlBrightDefaultBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlBrightDefaultBorderBrush}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid Height="{TemplateBinding FrameworkElement.Height}" Width="{TemplateBinding FrameworkElement.Width}">
            <Rectangle Name="rectangle" Fill="{TemplateBinding Control.Background}" SnapsToDevicePixels="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="rectangle" Property="Shape.Fill" Value="{StaticResource ControlMouseOverBackground}" />
              <Setter Property="BorderBrush" Value="{StaticResource ControlMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="rectangle" Property="Shape.Fill" Value="{StaticResource ControlBrightDefaultBackground}" />
              <Setter Property="BorderBrush" Value="{StaticResource ControlBrightDefaultBackground}" />
              <Setter Property="Foreground" Value="{StaticResource ControlBrightDefaultBorderBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Background" Value="{StaticResource ControlBrightDefaultBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlBrightDefaultBorderBrush}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid Height="{TemplateBinding FrameworkElement.Height}" Width="{TemplateBinding FrameworkElement.Width}">
            <Rectangle Name="rectangle" Fill="{TemplateBinding Control.Background}" SnapsToDevicePixels="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="rectangle" Property="Shape.Fill" Value="{StaticResource ControlMouseOverBackground}" />
              <Setter Property="BorderBrush" Value="{StaticResource ControlMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="rectangle" Property="Shape.Fill" Value="{StaticResource ControlBrightDefaultBackground}" />
              <Setter Property="BorderBrush" Value="{StaticResource ControlBrightDefaultBackground}" />
              <Setter Property="Foreground" Value="{StaticResource ControlBrightDefaultBorderBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="BorderBrush" Value="#00FFFFFF" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid Name="Grid" Background="{TemplateBinding Control.Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Rectangle Name="Corner" Grid.Column="1" Fill="#00FFFFFF" Grid.Row="1" />
            <ScrollContentPresenter Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" Grid.Column="0" Margin="{TemplateBinding Control.Padding}" Grid.Row="0" />
            <ScrollBar Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Grid.RowSpan="2" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Grid.ColumnSpan="1" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HorizontalScroller" TargetType="{x:Type ScrollViewer}">
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="BorderBrush" Value="#00FFFFFF" />
    <Setter Property="HorizontalScrollBarVisibility" Value="Visible" />
    <Setter Property="VerticalScrollBarVisibility" Value="Disabled" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid Name="Grid" Background="{TemplateBinding Control.Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition />
            </Grid.RowDefinitions>
            <Rectangle Name="Corner" Grid.Column="1" Fill="#00FFFFFF" Grid.Row="0" Margin="0,138,0,0" />
            <ScrollContentPresenter Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" Grid.Column="0" Margin="18,0" Grid.Row="0" />
            <ScrollBar Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Grid.RowSpan="1" Margin="0,0,-17,0" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Style="{DynamicResource HorizontalScrollerBar}" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="0" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Grid.ColumnSpan="1" Margin="0" Height="Auto" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Separator}" TargetType="{x:Type Separator}">
    <Setter Property="Background" Value="{StaticResource ControlBrightDefaultBackground}" />
    <Setter Property="Margin" Value="0,2,0,2" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Height="1" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="VerticalSeparator" TargetType="{x:Type Separator}">
    <Setter Property="Background" Value="{StaticResource ControlBrightDefaultBackground}" />
    <Setter Property="Width" Value="2" />
    <Setter Property="Margin" Value="2,0,2,0" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Height="Auto" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MenuItemSeparator" TargetType="{x:Type Separator}">
    <Setter Property="Background" Value="{StaticResource ControlBrightDefaultBorderBrush}" />
    <Setter Property="Margin" Value="0,2,0,2" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Control.Background}" Height="1" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
    <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
      <Path Name="grip" Data="M0,6 C0,6 5.5,0 5.5,0 C5.5,0 11,6 11,6 C11,6 11,18 11,18 C11,18 0,18 0,18 C0,18 0,6 0,6" Stretch="Fill" SnapsToDevicePixels="True" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center" StrokeLineJoin="Round" Fill="{StaticResource ControlBrightDefaultBackground}" Stroke="{StaticResource ControlBrightDefaultBorderBrush}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="True">
        <Setter TargetName="grip" Property="Shape.Fill" Value="{StaticResource ControlPrimaryDarkerBackground}" />
        <Setter TargetName="grip" Property="Shape.Stroke" Value="{StaticResource ControlPrimaryDarkerBorderBrush}" />
      </Trigger>
      <Trigger Property="Thumb.IsDragging" Value="True">
        <Setter TargetName="grip" Property="Shape.Fill" Value="{StaticResource ControlPrimarySelectedMouseOverBackground}" />
        <Setter TargetName="grip" Property="Shape.Stroke" Value="{StaticResource ControlPrimarySelectedMouseOverBorderBrush}" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter TargetName="grip" Property="Shape.Fill" Value="{StaticResource ControlDisabledBackground}" />
        <Setter TargetName="grip" Property="Shape.Stroke" Value="{StaticResource ControlDisabledBorderBrush}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
    <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
      <Path Name="grip" Data="M0,12 C0,12 5.5,18 5.5,18 C5.5,18 11,12 11,12 C11,12 11,0 11,0 C11,0 0,0 0,0 C0,0 0,12 0,12" Stretch="Fill" SnapsToDevicePixels="True" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center" StrokeLineJoin="Round" Fill="{StaticResource ControlBrightDefaultBackground}" Stroke="{StaticResource ControlBrightDefaultBorderBrush}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="True">
        <Setter TargetName="grip" Property="Shape.Fill" Value="{StaticResource ControlPrimaryDarkerBackground}" />
        <Setter TargetName="grip" Property="Shape.Stroke" Value="{StaticResource ControlPrimaryDarkerBorderBrush}" />
      </Trigger>
      <Trigger Property="Thumb.IsDragging" Value="True">
        <Setter TargetName="grip" Property="Shape.Fill" Value="{StaticResource ControlPrimarySelectedMouseOverBackground}" />
        <Setter TargetName="grip" Property="Shape.Stroke" Value="{StaticResource ControlPrimarySelectedMouseOverBorderBrush}" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter TargetName="grip" Property="Shape.Fill" Value="{StaticResource ControlDisabledBackground}" />
        <Setter TargetName="grip" Property="Shape.Stroke" Value="{StaticResource ControlDisabledBorderBrush}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="#FFD6D6D6" />
  <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="#FFE7EAEA" />
  <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
    <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Stretch" Margin="0" Width="11">
      <Rectangle Name="grip" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" StrokeLineJoin="Round" SnapsToDevicePixels="True" StrokeThickness="1" UseLayoutRounding="True" RadiusX="1" RadiusY="1" Fill="{StaticResource ControlBrightDefaultBackground}" Stroke="{StaticResource ControlBrightDefaultBorderBrush}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="True">
        <Setter TargetName="grip" Property="Shape.Fill" Value="{StaticResource ControlPrimaryDarkerBackground}" />
        <Setter TargetName="grip" Property="Shape.Stroke" Value="{StaticResource ControlPrimaryDarkerBorderBrush}" />
      </Trigger>
      <Trigger Property="Thumb.IsDragging" Value="True">
        <Setter TargetName="grip" Property="Shape.Fill" Value="{StaticResource ControlPrimarySelectedMouseOverBackground}" />
        <Setter TargetName="grip" Property="Shape.Stroke" Value="{StaticResource ControlPrimarySelectedMouseOverBorderBrush}" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter TargetName="grip" Property="Shape.Fill" Value="{StaticResource ControlDisabledBackground}" />
        <Setter TargetName="grip" Property="Shape.Stroke" Value="{StaticResource ControlDisabledBorderBrush}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
    <Border Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" MinHeight="{TemplateBinding FrameworkElement.MinHeight}" />
          <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TickBar Name="TopTick" Fill="{TemplateBinding Control.Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed" />
        <TickBar Name="BottomTick" Fill="{TemplateBinding Control.Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed" />
        <Border Name="TrackBackground" BorderThickness="1" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center" BorderBrush="{StaticResource ControlDefaultBorderBrush}" Background="{StaticResource ControlDefaultBackground}">
          <Canvas Margin="-6,-1">
            <Rectangle Name="PART_SelectionRange" Fill="#FFFF0000" Height="4.0" Visibility="Hidden" />
          </Canvas>
        </Border>
        <Track Name="PART_Track" Grid.Row="1">
          <Track.DecreaseRepeatButton>
            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
          </Track.DecreaseRepeatButton>
          <Track.IncreaseRepeatButton>
            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
          </Track.IncreaseRepeatButton>
          <Track.Thumb>
            <Thumb Name="Thumb" Focusable="False" Height="20" OverridesDefaultStyle="True" VerticalAlignment="Center" Width="11" Template="{StaticResource SliderThumbHorizontalDefault}" />
          </Track.Thumb>
        </Track>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="Slider.TickPlacement" Value="TopLeft">
        <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="Thumb" Property="Control.Template" Value="{StaticResource SliderThumbHorizontalTop}" />
        <Setter TargetName="TrackBackground" Property="FrameworkElement.Margin" Value="5,2,5,0" />
      </Trigger>
      <Trigger Property="Slider.TickPlacement" Value="BottomRight">
        <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="Thumb" Property="Control.Template" Value="{StaticResource SliderThumbHorizontalBottom}" />
        <Setter TargetName="TrackBackground" Property="FrameworkElement.Margin" Value="5,0,5,2" />
      </Trigger>
      <Trigger Property="Slider.TickPlacement" Value="Both">
        <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="Slider.IsSelectionRangeEnabled" Value="True">
        <Setter TargetName="PART_SelectionRange" Property="UIElement.Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
        <Setter TargetName="Thumb" Property="Control.Foreground" Value="#FF0000FF" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}">
    <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
      <Path Name="grip" Data="M6,11 C6,11 0,5.5 0,5.5 C0,5.5 6,0 6,0 C6,0 18,0 18,0 C18,0 18,11 18,11 C18,11 6,11 6,11" SnapsToDevicePixels="True" Stretch="Fill" StrokeLineJoin="Round" StrokeThickness="1" Fill="{StaticResource ControlBrightDefaultBackground}" Stroke="{StaticResource ControlBrightDefaultBorderBrush}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="True">
        <Setter TargetName="grip" Property="Shape.Fill" Value="{StaticResource ControlPrimaryDarkerBackground}" />
        <Setter TargetName="grip" Property="Shape.Stroke" Value="{StaticResource ControlPrimaryDarkerBorderBrush}" />
      </Trigger>
      <Trigger Property="Thumb.IsDragging" Value="True">
        <Setter TargetName="grip" Property="Shape.Fill" Value="{StaticResource ControlPrimarySelectedMouseOverBackground}" />
        <Setter TargetName="grip" Property="Shape.Stroke" Value="{StaticResource ControlPrimarySelectedMouseOverBorderBrush}" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter TargetName="grip" Property="Shape.Fill" Value="{StaticResource ControlDisabledBackground}" />
        <Setter TargetName="grip" Property="Shape.Stroke" Value="{StaticResource ControlDisabledBorderBrush}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}">
    <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
      <Path Name="grip" Data="M12,11 C12,11 18,5.5 18,5.5 C18,5.5 12,0 12,0 C12,0 0,0 0,0 C0,0 0,11 0,11 C0,11 12,11 12,11" SnapsToDevicePixels="True" Stretch="Fill" StrokeLineJoin="Round" Fill="{StaticResource ControlBrightDefaultBackground}" Stroke="{StaticResource ControlBrightDefaultBorderBrush}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="True">
        <Setter TargetName="grip" Property="Shape.Fill" Value="{StaticResource ControlPrimaryDarkerBackground}" />
        <Setter TargetName="grip" Property="Shape.Stroke" Value="{StaticResource ControlPrimaryDarkerBorderBrush}" />
      </Trigger>
      <Trigger Property="Thumb.IsDragging" Value="True">
        <Setter TargetName="grip" Property="Shape.Fill" Value="{StaticResource ControlPrimarySelectedMouseOverBackground}" />
        <Setter TargetName="grip" Property="Shape.Stroke" Value="{StaticResource ControlPrimarySelectedMouseOverBorderBrush}" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter TargetName="grip" Property="Shape.Fill" Value="{StaticResource ControlDisabledBackground}" />
        <Setter TargetName="grip" Property="Shape.Stroke" Value="{StaticResource ControlDisabledBorderBrush}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
    <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
      <Rectangle Name="grip" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" StrokeLineJoin="Round" SnapsToDevicePixels="True" StrokeThickness="1" UseLayoutRounding="True" RadiusX="1" RadiusY="1" Width="18" Height="11" Fill="{StaticResource ControlBrightDefaultBackground}" Stroke="{StaticResource ControlBrightDefaultBorderBrush}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="True">
        <Setter TargetName="grip" Property="Shape.Fill" Value="{StaticResource ControlPrimaryDarkerBackground}" />
        <Setter TargetName="grip" Property="Shape.Stroke" Value="{StaticResource ControlPrimaryDarkerBorderBrush}" />
      </Trigger>
      <Trigger Property="Thumb.IsDragging" Value="True">
        <Setter TargetName="grip" Property="Shape.Fill" Value="{StaticResource ControlPrimarySelectedMouseOverBackground}" />
        <Setter TargetName="grip" Property="Shape.Stroke" Value="{StaticResource ControlPrimarySelectedMouseOverBorderBrush}" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter TargetName="grip" Property="Shape.Fill" Value="{StaticResource ControlDisabledBackground}" />
        <Setter TargetName="grip" Property="Shape.Stroke" Value="{StaticResource ControlDisabledBorderBrush}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
    <Border Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition MinWidth="{TemplateBinding FrameworkElement.MinWidth}" Width="Auto" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <TickBar Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Control.Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4" />
        <TickBar Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Control.Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4" />
        <Border Name="TrackBackground" BorderThickness="1" Grid.Column="1" HorizontalAlignment="center" Margin="0,5" Width="4.0" BorderBrush="{StaticResource ControlDefaultBorderBrush}" Background="{StaticResource ControlDefaultBackground}">
          <Canvas Margin="-1,-6">
            <Rectangle Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Hidden" Width="4.0" />
          </Canvas>
        </Border>
        <Track Name="PART_Track" Grid.Column="1">
          <Track.DecreaseRepeatButton>
            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
          </Track.DecreaseRepeatButton>
          <Track.IncreaseRepeatButton>
            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
          </Track.IncreaseRepeatButton>
          <Track.Thumb>
            <Thumb Name="Thumb" Focusable="False" Height="11" OverridesDefaultStyle="True" VerticalAlignment="Top" Width="18" Template="{StaticResource SliderThumbVerticalDefault}" />
          </Track.Thumb>
        </Track>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="Slider.TickPlacement" Value="TopLeft">
        <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="Thumb" Property="Control.Template" Value="{StaticResource SliderThumbVerticalLeft}" />
        <Setter TargetName="TrackBackground" Property="FrameworkElement.Margin" Value="2,5,0,5" />
      </Trigger>
      <Trigger Property="Slider.TickPlacement" Value="BottomRight">
        <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="Thumb" Property="Control.Template" Value="{StaticResource SliderThumbVerticalRight}" />
        <Setter TargetName="TrackBackground" Property="FrameworkElement.Margin" Value="0,5,2,5" />
      </Trigger>
      <Trigger Property="Slider.TickPlacement" Value="Both">
        <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="Slider.IsSelectionRangeEnabled" Value="True">
        <Setter TargetName="PART_SelectionRange" Property="UIElement.Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
        <Setter TargetName="Thumb" Property="Control.Foreground" Value="#FF0000FF" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type Slider}" TargetType="{x:Type Slider}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="True" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="BorderBrush" Value="#00FFFFFF" />
    <Setter Property="Foreground" Value="{StaticResource ControlPrimaryGlythColour}" />
    <Setter Property="Template" Value="{StaticResource SliderHorizontal}" />
    <Setter Property="RangeBase.Minimum" Value="0" />
    <Setter Property="RangeBase.Maximum" Value="100" />
    <Setter Property="RangeBase.Value" Value="0" />
    <Setter Property="Slider.IsSnapToTickEnabled" Value="True" />
    <Setter Property="Slider.IsMoveToPointEnabled" Value="True" />
    <Setter Property="RangeBase.SmallChange" Value="1" />
    <Setter Property="RangeBase.LargeChange" Value="5" />
    <Setter Property="Slider.Orientation" Value="Horizontal" />
    <Style.Triggers>
      <Trigger Property="Slider.Orientation" Value="Vertical">
        <Setter Property="Template" Value="{StaticResource SliderVertical}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type TabControl}" TargetType="{x:Type TabControl}">
    <Setter Property="Padding" Value="2" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Background" Value="{StaticResource BackgroundColour}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid Name="templateRoot" ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Name="ColumnDefinition0" />
              <ColumnDefinition Name="ColumnDefinition1" Width="0" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Name="RowDefinition0" Height="Auto" />
              <RowDefinition Name="RowDefinition1" Height="*" />
            </Grid.RowDefinitions>
            <TabPanel Name="headerPanel" Background="#00FFFFFF" Grid.Column="0" IsItemsHost="True" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" ZIndex="1" />
            <Border Name="contentPanel" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
              <ContentPresenter Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
              <Setter TargetName="headerPanel" Property="Grid.Row" Value="1" />
              <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
              <Setter TargetName="headerPanel" Property="Margin" Value="2,0,2,2" />
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Left">
              <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="headerPanel" Property="Grid.Column" Value="0" />
              <Setter TargetName="contentPanel" Property="Grid.Column" Value="1" />
              <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto" />
              <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*" />
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
              <Setter TargetName="headerPanel" Property="Margin" Value="2,2,0,2" />
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Right">
              <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="headerPanel" Property="Grid.Column" Value="1" />
              <Setter TargetName="contentPanel" Property="Grid.Column" Value="0" />
              <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*" />
              <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto" />
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
              <Setter TargetName="headerPanel" Property="Margin" Value="0,2,2,2" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource ControlDisabledGlythColour}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TabItem}" TargetType="{x:Type TabItem}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="Background" Value="{StaticResource ControlDarkerBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDarkerBorderBrush}" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Padding" Value="6,4,6,4" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <Grid Name="templateRoot" SnapsToDevicePixels="True">
            <Border Name="mainBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Control.Background}" Margin="0">
              <Border Name="innerBorder" BorderThickness="1,1,1,0" Margin="-1" Opacity="0" BorderBrush="{StaticResource ControlDefaultBorderBrush}" Background="{StaticResource BackgroundColour}" />
            </Border>
            <ContentPresenter Name="contentPresenter" ContentSource="Header" Focusable="False" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
          </Grid>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                <Condition Value="Left" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="mainBorder" Property="Border.Background" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
              <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
              <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
              <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                <Condition Value="Bottom" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="mainBorder" Property="Border.Background" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
              <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
              <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
              <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                <Condition Value="Right" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="mainBorder" Property="Border.Background" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
              <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
              <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
              <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                <Condition Value="Top" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="mainBorder" Property="Border.Background" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
              <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
              <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
              <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
                <Condition Value="Left" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
              <Setter TargetName="mainBorder" Property="Border.Background" Value="{StaticResource ControlDisabledBackground}" />
              <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="{StaticResource ControlDisabledBorderBrush}" />
              <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
              <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
                <Condition Value="Bottom" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
              <Setter TargetName="mainBorder" Property="Border.Background" Value="{StaticResource ControlDisabledBackground}" />
              <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="{StaticResource ControlDisabledBorderBrush}" />
              <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
              <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
                <Condition Value="Right" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
              <Setter TargetName="mainBorder" Property="Border.Background" Value="{StaticResource ControlDisabledBackground}" />
              <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="{StaticResource ControlDisabledBorderBrush}" />
              <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
              <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
                <Condition Value="Top" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
              <Setter TargetName="mainBorder" Property="Border.Background" Value="{StaticResource ControlDisabledBackground}" />
              <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="{StaticResource ControlDisabledBorderBrush}" />
              <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
              <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="false" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                <Condition Value="Left" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
              <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                <Condition Value="Left" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Panel.ZIndex" Value="1" />
              <Setter Property="Margin" Value="-2,-2,0,-2" />
              <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="1" />
              <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
              <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="false" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                <Condition Value="Bottom" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
              <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                <Condition Value="Bottom" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Panel.ZIndex" Value="1" />
              <Setter Property="Margin" Value="-2,0,-2,-2" />
              <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="1" />
              <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
              <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="false" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                <Condition Value="Right" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
              <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                <Condition Value="Right" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Panel.ZIndex" Value="1" />
              <Setter Property="Margin" Value="0,-2,-2,-2" />
              <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="1" />
              <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
              <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="false" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                <Condition Value="Top" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
              <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="true" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                <Condition Value="Top" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Panel.ZIndex" Value="1" />
              <Setter Property="Margin" Value="-2,-2,-2,0" />
              <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="1" />
              <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
              <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="CloseButton" TargetType="{x:Type TabItem}">
    <Grid Name="templateRoot" SnapsToDevicePixels="True">
      <Border Name="mainBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0,1,1,1" Background="{TemplateBinding Control.Background}" Margin="0">
        <Border Name="innerBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0,1,1,0" Background="{TemplateBinding Control.Background}" Margin="-1" Opacity="0" />
      </Border>
      <ContentPresenter Name="contentPresenter" ContentSource="Header" Focusable="False" Margin="10,9,36,9" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
      <Border Height="24" VerticalAlignment="Center" HorizontalAlignment="Right" Width="24" Margin="0,8,8,7">
        <Button Background="#00FFFFFF" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" FontFamily="Consolas" Content="x" Command="{Binding CloseTabCommand}" BorderBrush="{x:Null}" />
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
          <Condition Value="Left" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="mainBorder" Property="Border.Background" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
        <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
        <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
        <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
          <Condition Value="Bottom" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="mainBorder" Property="Border.Background" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
        <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
        <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
        <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
          <Condition Value="Right" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="mainBorder" Property="Border.Background" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
        <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
        <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
        <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
          <Condition Value="Top" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="mainBorder" Property="Border.Background" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
        <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
        <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
        <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
          <Condition Value="Left" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
        <Setter TargetName="mainBorder" Property="Border.Background" Value="{StaticResource ControlDisabledBackground}" />
        <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="{StaticResource ControlDisabledBorderBrush}" />
        <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
        <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
          <Condition Value="Bottom" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
        <Setter TargetName="mainBorder" Property="Border.Background" Value="{StaticResource ControlDisabledBackground}" />
        <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="{StaticResource ControlDisabledBorderBrush}" />
        <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
        <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
          <Condition Value="Right" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
        <Setter TargetName="mainBorder" Property="Border.Background" Value="{StaticResource ControlDisabledBackground}" />
        <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="{StaticResource ControlDisabledBorderBrush}" />
        <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
        <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
          <Condition Value="Top" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
        <Setter TargetName="mainBorder" Property="Border.Background" Value="{StaticResource ControlDisabledBackground}" />
        <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="{StaticResource ControlDisabledBorderBrush}" />
        <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
        <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Value="false" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
          <Condition Value="Left" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
        <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Value="true" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
          <Condition Value="Left" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Panel.ZIndex" Value="1" />
        <Setter Property="FrameworkElement.Margin" Value="-2,-2,0,-2" />
        <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="1" />
        <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
        <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Value="false" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
          <Condition Value="Bottom" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
        <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Value="true" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
          <Condition Value="Bottom" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Panel.ZIndex" Value="1" />
        <Setter Property="FrameworkElement.Margin" Value="-2,0,-2,-2" />
        <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="1" />
        <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
        <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Value="false" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
          <Condition Value="Right" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
        <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Value="true" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
          <Condition Value="Right" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Panel.ZIndex" Value="1" />
        <Setter Property="FrameworkElement.Margin" Value="0,-2,-2,-2" />
        <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="1" />
        <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
        <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Value="false" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
          <Condition Value="Top" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
        <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Value="true" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
          <Condition Value="Top" Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Panel.ZIndex" Value="1" />
        <Setter Property="FrameworkElement.Margin" Value="-2,-2,-2,0" />
        <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="1" />
        <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
        <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
      </MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="AddButtons" TargetType="{x:Type TabControl}">
    <Grid Name="templateRoot" ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Name="ColumnDefinition0" />
        <ColumnDefinition Name="ColumnDefinition1" Width="0" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Name="RowDefinition0" Height="Auto" />
        <RowDefinition Name="RowDefinition1" Height="*" />
      </Grid.RowDefinitions>
      <StackPanel Orientation="Horizontal">
        <TabPanel Name="headerPanel" Grid.Column="0" IsItemsHost="True" Margin="0 2 0 0" Grid.Row="0" KeyboardNavigation.TabIndex="1" ZIndex="1" />
        <Border CornerRadius="3" Height="28" VerticalAlignment="Center" HorizontalAlignment="Center" Width="28" Margin="8 0 0 0" Background="{StaticResource ContainerBackground}">
          <Button Background="#00FFFFFF" Content="+" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" FontFamily="Consolas" FontSize="16" Foreground="{DynamicResource ControlDefaultForeground}" Command="{Binding NewTabCommand}" BorderBrush="{x:Null}" />
        </Border>
      </StackPanel>
      <Border Name="contentPanel" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
        <ContentPresenter Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
        <Setter TargetName="headerPanel" Property="Grid.Row" Value="1" />
        <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
        <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
        <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
        <Setter TargetName="headerPanel" Property="FrameworkElement.Margin" Value="2,0,2,2" />
      </Trigger>
      <Trigger Property="TabControl.TabStripPlacement" Value="Left">
        <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
        <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
        <Setter TargetName="headerPanel" Property="Grid.Column" Value="0" />
        <Setter TargetName="contentPanel" Property="Grid.Column" Value="1" />
        <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto" />
        <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*" />
        <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
        <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
        <Setter TargetName="headerPanel" Property="FrameworkElement.Margin" Value="2,2,0,2" />
      </Trigger>
      <Trigger Property="TabControl.TabStripPlacement" Value="Right">
        <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
        <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
        <Setter TargetName="headerPanel" Property="Grid.Column" Value="1" />
        <Setter TargetName="contentPanel" Property="Grid.Column" Value="0" />
        <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*" />
        <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto" />
        <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
        <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
        <Setter TargetName="headerPanel" Property="FrameworkElement.Margin" Value="0,2,2,2" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource ControlDisabledGlythColour}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
    <Setter Property="TextWrapping" Value="NoWrap" />
    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    <Setter Property="TextBlock.TextAlignment" Value="Left" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
  </Style>
  <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
    <Setter Property="Background" Value="{StaticResource ContainerBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="TextBoxBase.CaretBrush" Value="{StaticResource ControlPrimaryCaretBackground}" />
    <Setter Property="TextBoxBase.SelectionBrush" Value="{StaticResource ControlPrimaryCaretSelectionBackground}" />
    <Setter Property="TextBoxBase.SelectionOpacity" Value="0.7" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="UIElement.AllowDrop" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <Border Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <ScrollViewer Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="border" Property="UIElement.Opacity" Value="0.56" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource ControlMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
              <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource ControlSelectedBorderBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="TextBoxBase.IsInactiveSelectionHighlightEnabled" Value="True" />
          <Condition Property="TextBoxBase.IsSelectionActive" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="TextBoxBase.SelectionBrush" Value="{StaticResource ControlDisabledGlythColour}" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="MinHeight" Value="0" />
    <Setter Property="MinWidth" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}" CornerRadius="0,0,3,3" SnapsToDevicePixels="True">
            <Canvas HorizontalAlignment="Right" Height="6" Margin="2,7,2,2" SnapsToDevicePixels="True" VerticalAlignment="Bottom" Width="7">
              <Path Data="M1.5,1 L1.5,6" Stroke="{TemplateBinding Control.Foreground}" />
              <Path Data="M0.5,0 L0.5,5" Stroke="{TemplateBinding Control.Foreground}" />
              <Path Data="M3.5,0.5 L7,3.5 L4,6.5" Fill="{TemplateBinding Control.Foreground}" />
              <Path Data="M3,-0.5 L6,2.5 L3,5.5" Fill="{TemplateBinding Control.Foreground}" />
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlDefaultBackground}" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlDefaultBackground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{StaticResource ControlGlythColour}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Background" Value="{StaticResource ControlDarkerBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlBrightDefaultBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="MinHeight" Value="0" />
    <Setter Property="MinWidth" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}" CornerRadius="0,3,3,0" SnapsToDevicePixels="True">
            <Canvas HorizontalAlignment="Right" Height="7" Margin="7,2,2,2" SnapsToDevicePixels="True" VerticalAlignment="Bottom" Width="6">
              <Path Data="M1,1.5 L6,1.5" Stroke="{StaticResource ControlBrightDefaultBackground}" />
              <Path Data="M0,0.5 L5,0.5" Stroke="{StaticResource ControlBrightDefaultBorderBrush}" />
              <Path Data="M0.5,4 L6.5,4 L3.5,7" Fill="{StaticResource ControlBrightDefaultBackground}" />
              <Path Data="M-0.5,3 L5.5,3 L2.5,6" Fill="{StaticResource ControlBrightDefaultBorderBrush}" />
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlDefaultBackground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{StaticResource ControlGlythColour}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NoCornersToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Background" Value="{StaticResource ControlDarkerBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlBrightDefaultBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="MinHeight" Value="0" />
    <Setter Property="MinWidth" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}" CornerRadius="0" SnapsToDevicePixels="True">
            <Canvas HorizontalAlignment="Right" Height="7" Margin="7,2,2,2" SnapsToDevicePixels="True" VerticalAlignment="Bottom" Width="6">
              <Path Data="M1,1.5 L6,1.5" Stroke="{StaticResource ControlBrightDefaultBackground}" />
              <Path Data="M0,0.5 L5,0.5" Stroke="{StaticResource ControlBrightDefaultBorderBrush}" />
              <Path Data="M0.5,4 L6.5,4 L3.5,7" Fill="{StaticResource ControlBrightDefaultBackground}" />
              <Path Data="M-0.5,3 L5.5,3 L2.5,6" Fill="{StaticResource ControlBrightDefaultBorderBrush}" />
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlPrimaryMouseOverBackground}" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlDefaultBackground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{StaticResource ControlGlythColour}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Background="#00FFFFFF" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <Rectangle>
              <Shape.Fill>
                <DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" Viewport="0,0,4,4" ViewportUnits="Absolute" ViewboxUnits="Absolute">
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <GeometryDrawing Geometry="M1,1 L1,3 L3,3 L3,1" Brush="{StaticResource ControlBrightDefaultBackground}" />
                      <GeometryDrawing Geometry="M0,0 L0,2 L2,2 L2,0" Brush="{StaticResource ControlBrightDefaultBorderBrush}" />
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Shape.Fill>
            </Rectangle>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter Property="FrameworkElement.Cursor" Value="SizeAll" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
    <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="Margin" Value="0,0,11,0" />
    <Setter Property="Border.CornerRadius" Value="3,3,3,3" />
    <Style.Triggers>
      <DataTrigger Value="true" Binding="{Binding Source={x:Static SystemParameters.HighContrast}}">
        <Setter Property="Border.CornerRadius" Value="0,0,0,0" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="NoCornersToolBarStyle" TargetType="{x:Type Border}">
    <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="Margin" Value="0,0,11,0" />
    <Setter Property="Border.CornerRadius" Value="0" />
  </Style>
  <Style x:Key="{x:Type ToolBar}" TargetType="{x:Type ToolBar}">
    <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolBar}">
          <Grid Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="True">
            <Grid Name="OverflowGrid" HorizontalAlignment="Right">
              <ToggleButton Name="OverflowButton" ClickMode="Press" IsEnabled="{TemplateBinding ToolBar.HasOverflowItems}" Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" FocusVisualStyle="{x:Null}" IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
              <Popup Name="OverflowPopup" AllowsTransparency="True" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" StaysOpen="False" IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}">
                <Themes:SystemDropShadowChrome Themes:SystemDropShadowChrome.Name="Shdw" Themes:SystemDropShadowChrome.Color="Transparent">
                  <Border Name="ToolBarSubMenuBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" Background="{TemplateBinding Control.Background}" RenderOptions.ClearTypeHint="Enabled">
                    <ToolBarOverflowPanel Name="PART_ToolBarOverflowPanel" KeyboardNavigation.DirectionalNavigation="Cycle" Focusable="True" Margin="2" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200" FocusVisualStyle="{x:Null}" />
                  </Border>
                </Themes:SystemDropShadowChrome>
              </Popup>
            </Grid>
            <Border Name="MainPanelBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}" Style="{StaticResource ToolBarMainPanelBorderStyle}">
              <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                <Thumb Name="ToolBarThumb" Margin="-3,-1,0,0" Padding="6,5,1,6" Width="10" Style="{StaticResource ToolBarThumbStyle}" />
                <ContentPresenter Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center" Margin="4,0,4,0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" />
                <ToolBarPanel Name="PART_ToolBarPanel" IsItemsHost="True" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
              </DockPanel>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ToolBar.IsOverflowOpen" Value="True">
              <Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="False" />
            </Trigger>
            <Trigger Property="Header" Value="{x:Null}">
              <Setter TargetName="ToolBarHeader" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ToolBarTray.IsLocked" Value="True">
              <Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger SourceName="OverflowPopup" Property="Popup.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="True" />
              <Setter TargetName="Shdw" Property="Themes:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
            <Trigger Property="ToolBar.Orientation" Value="Vertical">
              <Setter TargetName="Grid" Property="Margin" Value="1,3,1,1" />
              <Setter TargetName="OverflowButton" Property="Style" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}" />
              <Setter TargetName="ToolBarThumb" Property="Height" Value="10" />
              <Setter TargetName="ToolBarThumb" Property="Width" Value="Auto" />
              <Setter TargetName="ToolBarThumb" Property="Margin" Value="-1,-3,0,0" />
              <Setter TargetName="ToolBarThumb" Property="Padding" Value="5,6,6,1" />
              <Setter TargetName="ToolBarHeader" Property="Margin" Value="0,0,0,4" />
              <Setter TargetName="PART_ToolBarPanel" Property="Margin" Value="1,0,2,2" />
              <Setter TargetName="ToolBarThumb" Property="DockPanel.Dock" Value="Top" />
              <Setter TargetName="ToolBarHeader" Property="DockPanel.Dock" Value="Top" />
              <Setter TargetName="OverflowGrid" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="OverflowGrid" Property="VerticalAlignment" Value="Bottom" />
              <Setter TargetName="OverflowPopup" Property="Popup.Placement" Value="Right" />
              <Setter TargetName="MainPanelBorder" Property="Margin" Value="0,0,0,11" />
              <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{StaticResource ControlDisabledGlythColour}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="NoCornersToolBar" TargetType="{x:Type ToolBar}">
    <Grid Name="Grid" Margin="0" SnapsToDevicePixels="True">
      <Grid Name="OverflowGrid" HorizontalAlignment="Right">
        <ToggleButton Name="OverflowButton" ClickMode="Press" IsEnabled="{TemplateBinding ToolBar.HasOverflowItems}" Style="{StaticResource NoCornersToolBarHorizontalOverflowButtonStyle}" FocusVisualStyle="{x:Null}" IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
        <Popup Name="OverflowPopup" AllowsTransparency="True" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" StaysOpen="False" IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}">
          <Themes:SystemDropShadowChrome Themes:SystemDropShadowChrome.Name="Shdw" Themes:SystemDropShadowChrome.Color="Transparent">
            <Border Name="ToolBarSubMenuBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" Background="{TemplateBinding Control.Background}" RenderOptions.ClearTypeHint="Enabled">
              <ToolBarOverflowPanel Name="PART_ToolBarOverflowPanel" KeyboardNavigation.DirectionalNavigation="Cycle" Focusable="True" Margin="2" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200" FocusVisualStyle="{x:Null}" />
            </Border>
          </Themes:SystemDropShadowChrome>
        </Popup>
      </Grid>
      <Border Name="MainPanelBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" CornerRadius="0" Padding="{TemplateBinding Control.Padding}" Style="{StaticResource ToolBarMainPanelBorderStyle}">
        <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
          <Thumb Name="ToolBarThumb" Margin="-3,-1,0,0" Padding="6,5,1,6" Width="10" Style="{StaticResource ToolBarThumbStyle}" />
          <ContentPresenter Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center" Margin="4,0,4,0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" />
          <ToolBarPanel Name="PART_ToolBarPanel" IsItemsHost="True" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        </DockPanel>
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ToolBar.IsOverflowOpen" Value="True">
        <Setter TargetName="ToolBarThumb" Property="UIElement.IsEnabled" Value="False" />
      </Trigger>
      <Trigger Property="HeaderedItemsControl.Header" Value="{x:Null}">
        <Setter TargetName="ToolBarHeader" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="ToolBarTray.IsLocked" Value="True">
        <Setter TargetName="ToolBarThumb" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger SourceName="OverflowPopup" Property="Popup.HasDropShadow" Value="True">
        <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
        <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter TargetName="Shdw" Property="Themes:SystemDropShadowChrome.Color" Value="#71000000" />
      </Trigger>
      <Trigger Property="ToolBar.Orientation" Value="Vertical">
        <Setter TargetName="Grid" Property="FrameworkElement.Margin" Value="1,3,1,1" />
        <Setter TargetName="OverflowButton" Property="FrameworkElement.Style" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}" />
        <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Height" Value="10" />
        <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Width" Value="Auto" />
        <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Margin" Value="-1,-3,0,0" />
        <Setter TargetName="ToolBarThumb" Property="Control.Padding" Value="5,6,6,1" />
        <Setter TargetName="ToolBarHeader" Property="FrameworkElement.Margin" Value="0,0,0,4" />
        <Setter TargetName="PART_ToolBarPanel" Property="FrameworkElement.Margin" Value="1,0,2,2" />
        <Setter TargetName="ToolBarThumb" Property="DockPanel.Dock" Value="Top" />
        <Setter TargetName="ToolBarHeader" Property="DockPanel.Dock" Value="Top" />
        <Setter TargetName="OverflowGrid" Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
        <Setter TargetName="OverflowGrid" Property="FrameworkElement.VerticalAlignment" Value="Bottom" />
        <Setter TargetName="OverflowPopup" Property="Popup.Placement" Value="Right" />
        <Setter TargetName="MainPanelBorder" Property="FrameworkElement.Margin" Value="0,0,0,11" />
        <Setter Property="Control.Background" Value="{StaticResource ControlDefaultBackground}" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Property="Control.Foreground" Value="{StaticResource ControlDisabledGlythColour}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type ToolBarTray}" TargetType="{x:Type ToolBarTray}">
    <Setter Property="ToolBarTray.Background" Value="{StaticResource ContainerBackground}" />
  </Style>
  <ControlTemplate x:Key="ContextmenuStyle" TargetType="{x:Type ContextMenu}">
    <Border Name="Border" Background="{TemplateBinding Control.Background}" BorderThickness="1">
      <ScrollViewer Name="ScrollViewer">
        <ItemsPresenter />
      </ScrollViewer>
    </Border>
  </ControlTemplate>
  <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
    <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="MaxWidth" Value="800" />
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="ToolTip.HasDropShadow" Value="True" />
    <Setter Property="ToolTip.Placement" Value="MousePoint" />
    <Setter Property="ToolTip.PlacementRectangle" Value="10 10 5 5" />
    <Setter Property="ToolTip.HorizontalOffset" Value="15" />
    <Setter Property="ToolTip.VerticalOffset" Value="15" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolTip}">
          <Themes:SystemDropShadowChrome FrameworkElement.Name="Shdw" Themes:SystemDropShadowChrome.Color="Transparent" Themes:SystemDropShadowChrome.CornerRadius="0" UIElement.SnapsToDevicePixels="True">
            <Border Name="Border" SnapsToDevicePixels="True" BorderThickness="1" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}">
              <ContentPresenter Margin="5" HorizontalAlignment="Left" VerticalAlignment="Top">
                <FrameworkElement.Resources>
                  <ResourceDictionary>
                    <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
                      <Setter Property="TextWrapping" Value="Wrap" />
                      <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                      <Setter Property="TextBlock.TextAlignment" Value="Left" />
                      <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
                    </Style>
                  </ResourceDictionary>
                </FrameworkElement.Resources>
              </ContentPresenter>
            </Border>
          </Themes:SystemDropShadowChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ToolTip.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="Themes:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
    <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}">
      <Grid>
        <AdornerDecorator>
          <ContentPresenter />
        </AdornerDecorator>
        <ResizeGrip Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="False" Visibility="Visible" VerticalAlignment="Bottom" />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Window.ResizeMode" Value="NoResize" />
          <Condition Property="Window.WindowState" Value="Normal" />
        </MultiTrigger.Conditions>
        <Setter TargetName="WindowResizeGrip" Property="UIElement.Visibility" Value="Visible" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="MainWindowStyle" TargetType="{x:Type Window}">
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="Background" Value="{StaticResource BackgroundColour}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Window}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}">
            <AdornerDecorator>
              <ContentPresenter />
            </AdornerDecorator>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Window.ResizeMode" Value="NoResize">
        <Setter Property="Template" Value="{StaticResource WindowTemplateKey}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="CustomWindowStyle" TargetType="{x:Type Window}">
    <Setter Property="BorderBrush" Value="{StaticResource WindowBorderColour}" />
    <Setter Property="Background" Value="{StaticResource BackgroundColour}" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Window.ResizeMode" Value="NoResize" />
    <Setter Property="Window.WindowStyle" Value="SingleBorderWindow" />
    <Setter Property="WindowChrome.WindowChrome">
      <Setter.Value>
        <WindowChrome CaptionHeight="26" ResizeBorderThickness="6" CornerRadius="0" GlassFrameThickness="1" NonClientFrameEdges="None" UseAeroCaptionButtons="False" />
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Window}">
          <Grid>
            <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
              <Grid>
                <AdornerDecorator Margin="0,30,0,0">
                  <ContentPresenter />
                </AdornerDecorator>
                <Grid Name="titlebar" Height="30" Background="{TemplateBinding Control.BorderBrush}" VerticalAlignment="Top" Margin="0">
                  <DockPanel Margin="0,0,130,0">
                    <Image HorizontalAlignment="Left" VerticalAlignment="Top" Margin="4,4,0,0" Height="24" Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
                    <TextBlock Margin="5,3" VerticalAlignment="Center" HorizontalAlignment="Stretch" FontSize="14" Width="Auto" TextWrapping="NoWrap" Grid.Column="1" TextAlignment="Left" Foreground="{StaticResource ControlDefaultForeground}" Text="{Binding Title, RelativeSource={RelativeSource TemplatedParent}}" />
                  </DockPanel>
                  <StackPanel Orientation="Horizontal" Grid.Column="0" HorizontalAlignment="Right">
                    <Button Name="btnMinimize" Background="#00FFFFFF" BorderBrush="#00FFFFFF" Width="40" VerticalContentAlignment="Bottom" WindowChrome.IsHitTestVisibleInChrome="True" Click="eval_a">
                      <Rectangle Width="10" VerticalAlignment="Center" Margin="1 1 0 0" StrokeThickness="2" Stroke="{StaticResource ControlGlythColour}" />
                    </Button>
                    <Button Name="btnRestore" Background="#00FFFFFF" BorderBrush="#00FFFFFF" Width="40" WindowChrome.IsHitTestVisibleInChrome="True" Click="eval_b">
                      <Grid Width="12" Height="12">
                        <Rectangle StrokeThickness="2" Margin="3,0,0,3" Stroke="{StaticResource ControlGlythColour}" />
                        <Rectangle StrokeThickness="2" Fill="{TemplateBinding Control.BorderBrush}" Margin="0 3 3 0" Stroke="{StaticResource ControlGlythColour}" />
                      </Grid>
                    </Button>
                    <Button Name="btnClose" Background="#00FFFFFF" BorderBrush="#00FFFFFF" Template="{DynamicResource CloseWindowButton}" Width="40" WindowChrome.IsHitTestVisibleInChrome="True" Click="eval_c">
                      <Grid Margin="0 1 0 0">
                        <Line X1="0" Y1="0" X2="11" Y2="11" StrokeThickness="2" Stroke="{StaticResource ControlGlythColour}" />
                        <Line X1="0" Y2="0" Y1="11" X2="11" StrokeThickness="2" Stroke="{StaticResource ControlGlythColour}" />
                      </Grid>
                    </Button>
                  </StackPanel>
                </Grid>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Window.WindowState" Value="Maximized">
        <Setter Property="BorderThickness" Value="8" />
      </Trigger>
      <Trigger Property="Window.WindowState" Value="Normal">
        <Setter Property="BorderThickness" Value="1" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="CustomToolWindowStyle" TargetType="{x:Type Window}">
    <Setter Property="BorderBrush" Value="{StaticResource WindowBorderColour}" />
    <Setter Property="Background" Value="{StaticResource BackgroundColour}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Window.ResizeMode" Value="NoResize" />
    <Setter Property="Window.WindowStyle" Value="SingleBorderWindow" />
    <Setter Property="WindowChrome.WindowChrome">
      <Setter.Value>
        <WindowChrome CaptionHeight="26" ResizeBorderThickness="0" CornerRadius="0" GlassFrameThickness="1" NonClientFrameEdges="None" UseAeroCaptionButtons="False" />
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Window}">
          <Grid>
            <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
              <Grid>
                <AdornerDecorator Margin="0,30,0,0">
                  <ContentPresenter />
                </AdornerDecorator>
                <Grid Name="titlebar" Height="30" Background="{TemplateBinding Control.BorderBrush}" VerticalAlignment="Top" Margin="0">
                  <DockPanel Margin="0,0,130,0">
                    <Image HorizontalAlignment="Left" VerticalAlignment="Top" Margin="4,4,0,0" Height="24" Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
                    <TextBlock Margin="5,3" VerticalAlignment="Center" HorizontalAlignment="Stretch" FontSize="14" Width="Auto" TextWrapping="NoWrap" Grid.Column="1" TextAlignment="Left" Foreground="{StaticResource ControlDefaultForeground}" Text="{Binding Title, RelativeSource={RelativeSource TemplatedParent}}" />
                  </DockPanel>
                  <StackPanel Orientation="Horizontal" Grid.Column="0" HorizontalAlignment="Right">
                    <Button Name="btnMinimize" Background="#00FFFFFF" BorderBrush="#00FFFFFF" Width="40" VerticalContentAlignment="Bottom" WindowChrome.IsHitTestVisibleInChrome="True" Click="eval_a">
                      <Rectangle Width="10" VerticalAlignment="Center" Margin="1 1 0 0" StrokeThickness="2" Stroke="{StaticResource ControlGlythColour}" />
                    </Button>
                    <Button Name="btnClose" Background="#00FFFFFF" BorderBrush="#00FFFFFF" Template="{DynamicResource CloseWindowButton}" Width="40" WindowChrome.IsHitTestVisibleInChrome="True" Click="eval_c">
                      <Grid Margin="0 1 0 0">
                        <Line X1="0" Y1="0" X2="11" Y2="11" StrokeThickness="2" Stroke="{StaticResource ControlGlythColour}" />
                        <Line X1="0" Y2="0" Y1="11" X2="11" StrokeThickness="2" Stroke="{StaticResource ControlGlythColour}" />
                      </Grid>
                    </Button>
                  </StackPanel>
                </Grid>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Window.WindowState" Value="Maximized">
        <Setter Property="BorderThickness" Value="8" />
      </Trigger>
      <Trigger Property="Window.WindowState" Value="Normal">
        <Setter Property="BorderThickness" Value="1" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="CloseWindowButton" TargetType="{x:Type Button}">
    <Border Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      <ContentPresenter Name="contentPresenter" Focusable="False" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" HorizontalAlignment="Center" />
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="Button.IsDefaulted" Value="True">
        <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource ControlMouseOverBorderBrush}" />
      </Trigger>
      <Trigger Property="UIElement.IsMouseOver" Value="True">
        <Setter TargetName="border" Property="Border.Background" Value="#FFF01428" />
        <Setter TargetName="border" Property="Border.BorderBrush" Value="#FFF01428" />
      </Trigger>
      <Trigger Property="ButtonBase.IsPressed" Value="True">
        <Setter TargetName="border" Property="Border.Background" Value="#FF940A14" />
        <Setter TargetName="border" Property="Border.BorderBrush" Value="#FF940A14" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter TargetName="border" Property="Border.Background" Value="{StaticResource ControlBrightDefaultBackground}" />
        <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource ControlBrightDefaultBorderBrush}" />
        <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ControlDisabledGlythColour}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <SolidColorBrush x:Key="ListBorder" Color="#828790" />
  <Style x:Key="{x:Type TreeView}" TargetType="{x:Type TreeView}">
    <Setter Property="Background" Value="{StaticResource ContainerBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource ContainerBorder}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeView}">
          <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
            <ScrollViewer Name="_tv_scrollviewer_" Background="{TemplateBinding Control.Background}" CanContentScroll="False" Focusable="False" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
              <ItemsPresenter />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlDisabledBackground}" />
            </Trigger>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
              <Setter TargetName="_tv_scrollviewer_" Property="ScrollViewer.CanContentScroll" Value="True" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="TreeViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959" />
  <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626" />
  <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7" />
  <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB" />
  <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7" />
  <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB" />
  <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z" />
  <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF" />
  <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181" />
  <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Width" Value="16" />
    <Setter Property="Height" Value="16" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Background="#00FFFFFF" Height="16" Padding="5,5,5,5" Width="16">
            <Path Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}" Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
              <UIElement.RenderTransform>
                <RotateTransform Angle="135" CenterY="3" CenterX="3" />
              </UIElement.RenderTransform>
            </Path>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="ExpandPath" Property="RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180" CenterY="3" CenterX="3" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
              <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
              <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="ToggleButton.IsChecked" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
              <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Padding" Value="1,0,0,0" />
    <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition MinWidth="19" Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <ToggleButton Name="Expander" ClickMode="Press" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
            <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Grid.Column="1" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
              <ContentPresenter Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Border>
            <ItemsPresenter Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TreeViewItem.IsExpanded" Value="False">
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="False">
              <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlMouseOverBackground}" />
              <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ControlMouseOverBorderBrush}" />
            </MultiTrigger>
            <Trigger Property="TreeViewItem.IsSelected" Value="True">
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlSelectedBackground}" />
              <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ControlSelectedBorderBrush}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TreeViewItem.IsSelected" Value="True" />
                <Condition Property="TreeViewItem.IsSelectionActive" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ControlDefaultBackground}" />
              <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>